{"version":3,"sources":["i2-features/f1-Login/Login.module.css","i2-features/f3-Registration/Registration.module.css","i2-features/f0-test/Test.module.css","i2-features/f2-Recovery/CreateNewPassword.module.css","i2-features/f2-Recovery/Recovery.module.css","i1-main/m1-ui/u4-components/co2-Error404/Error404.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.module.css","i1-main/m1-ui/u2-header/Header.module.css","i1-main/m1-ui/u1-common/c1-assets/images/girl-dancer.gif","i1-main/m1-ui/u4-components/co2-Error404/Error404.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox.tsx","i1-main/m3-dal/api.ts","i1-main/m2-bll/profile-reducer.ts","i1-main/m2-bll/auth-reducer.ts","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.tsx","i2-features/f1-Login/Login.tsx","i1-main/m2-bll/registration-reducer.ts","i2-features/f3-Registration/Registration.tsx","i1-main/m1-ui/u4-components/co1-Profile/Profile.tsx","i1-main/m2-bll/recovery-reducer.ts","i2-features/f2-Recovery/Recovery.tsx","i2-features/f2-Recovery/CreateNewPassword.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.tsx","i2-features/f0-test/Test.tsx","i1-main/m1-ui/u3-routes/Routes.tsx","i1-main/m1-ui/u2-header/Header.tsx","i1-main/m1-ui/App.tsx","reportWebVitals.ts","i1-main/m2-bll/test-reducer.ts","i1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error404","error404_text","girl","src","alt","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","instance","axios","create","baseURL","withCredentials","authAPI","data","post","RegistrationAPI","initialState","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","profileChanged","login","password","isLoggedIn","emailChanged","passwordChanged","rememberMeChanged","onSubmit","onError","onErrorAC","onSubmitTC","dispatch","then","res","avatar","catch","err","response","message","SuperButton","red","finalClassName","default","Login","useDispatch","state","useSelector","to","PATH","PROFILE","loginForm","preventDefault","title","inputItem","inputForm","placeholder","superButton","CHANGE_EMAIL","CHANGE_PASSWORD","IS_REGISTRATION","isRegistered","changeEmail","changePassword","createUserTC","dataRegistration","status","console","log","Registration","changeValueEvent","changeValue","LOGIN","registration","registrationInner","registrationItem","registrationButton","onClick","Profile","profile","isDone","recoveryInfo","setNewPasswordInfo","isNewPasswordSet","SUCCESSFUL","RESPONSE_RECOVERY_INFO","RESPONSE_SET_NEW_PASSWORD_INFO","SET_NEW_PASSWORD","successful","recoveryPassword","info","setNewPasswordTC","Recovery","useState","setEmail","recovery","event","from","button","CreateNewPassword","setPassword","token","useParams","createNewPassword","input","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","Test","setChecked","setValue","arr","value1","value2","setValue2","test","superComponent","alert","undefined","newMinValue","REGISTRATION","RECOVERY","CREATE_NEW_PASSWORD","TEST","Routes","path","exact","render","Header","background","nav_links","nav_container","title_nav","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","testObj","firstCase","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a79529d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3esZq\",\"loginForm\":\"Login_loginForm__3tV1n\",\"title\":\"Login_title__1vSAw\",\"message\":\"Login_message__FlCpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__38XR1\",\"registrationInner\":\"Registration_registrationInner__2pTMs\",\"title\":\"Registration_title__1JeDB\",\"message\":\"Registration_message__1oRZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__2Q38G\",\"superComponent\":\"Test_superComponent__1Whms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createNewPassword\":\"CreateNewPassword_createNewPassword__s2Y9P\",\"button\":\"CreateNewPassword_button__3jvFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"Recovery_recovery__2Fm81\",\"title\":\"Recovery_title__2CVYg\",\"button\":\"Recovery_button__ytP9J\",\"message\":\"Recovery_message__2EyeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1ry36\",\"error404_text\":\"Error404_error404_text__2VILg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1LYW_\",\"errorInput\":\"SuperInputText_errorInput__271Mi\",\"error\":\"SuperInputText_error__2roUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2QTKu\",\"red\":\"SuperButton_red__2B-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__RTEUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2ayCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Header_background__3d8e3\",\"nav_links\":\"Header_nav_links__2fY8Y\",\"nav_container\":\"Header_nav_container__20c2T\",\"title_nav\":\"Header_title_nav__3-n7c\",\"active\":\"Header_active__35kSX\"};","export default __webpack_public_path__ + \"static/media/girl-dancer.cfef6556.gif\";","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport girl from '../../u1-common/c1-assets/images/girl-dancer.gif'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error404}>\r\n            <div className={s.error404_text}>404\r\n            Page not found!</div><br/>\r\n            <div className={s.girl}><img src={girl} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                value={restProps.value}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // const isChecked = e.currentTarget.checked\r\n        onChangeChecked &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n        onChange &&\r\n        onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import axios from \"axios\";\r\nimport {AxiosResponseType, LoginType} from \"../m2-bll/auth-reducer\";\r\n\r\n\r\n//'https://neko-back.herokuapp.com/2.0/'\r\n//\"http://localhost:7542/2.0/\"\r\n\r\n// 'valentyn.333k@gmail.com'\r\n// '123123123'\r\nconst instance  = axios.create ({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\nexport type RequestRecoveryType = {\r\n    email: string,\r\n    from?: string,\r\n    message?: string\r\n}\r\n\r\ntype RecoveryResponseType = {\r\n    info: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type RequestType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ResponseType = {\r\n    data: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    token: string\r\n}\r\nexport type SetNewPasswordResponseType = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport const authAPI = {\r\n    recoverPassword(data: RequestRecoveryType) {\r\n        return  instance.post<RecoveryResponseType>('auth/forgot', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<AxiosResponseType>('auth/login', data)\r\n    },\r\n    setNewPassword(data: SetNewPasswordRequestType) {\r\n        return instance.post<SetNewPasswordResponseType>('auth/set-new-password', data)\r\n    },\r\n}\r\n\r\nexport const RegistrationAPI = {\r\n    signUp(data: RequestType) {\r\n        return instance.post<ResponseType>('auth/register', data)\r\n    },\r\n    ping() {\r\n        return instance.get('ping')\r\n    }\r\n}","import {AxiosResponseType} from \"./auth-reducer\";\r\n\r\nconst initialState: AxiosResponseType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype PROFILE = ReturnType<typeof profileAC>\r\n\r\n\r\ntype ActionsType = PROFILE\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case profileChanged:\r\n            return {\r\n                ...state,\r\n                _id: action._id,\r\n                email: action.email,\r\n                name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                created: action.created,\r\n                updated: action.updated,\r\n                isAdmin: action.isAdmin,\r\n                verified: action.verified,\r\n                rememberMe: action.rememberMe,\r\n                avatar: action.avatar,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst profileChanged = 'profileChanged'\r\n\r\n\r\nexport const profileAC = (\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    avatar?: string,\r\n    error?: string,\r\n) => ({type: profileChanged, _id, email, name, avatar, publicCardPacksCount, created,\r\n    updated, isAdmin, verified, rememberMe, error} as const)\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {profileAC} from \"./profile-reducer\";\r\n\r\ntype EMAIL_CHANGED = ReturnType<typeof emailChangedAC>\r\ntype PASSWORD_CHANGED = ReturnType<typeof passwordChangedAC>\r\ntype ON_SUBMIT = ReturnType<typeof onSubmitAC>\r\ntype REMEMBER_ME = ReturnType<typeof rememberMeChangedAC>\r\nexport type ON_ERROR = ReturnType<typeof onErrorAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\nexport type LoginType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nexport type AxiosResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nconst initialState = {\r\n    login: 'nya-admin@nya.nya',\r\n    password: '1qazxcvBG',\r\n    rememberMe: false,\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\n\r\ntype ActionsType = EMAIL_CHANGED | PASSWORD_CHANGED | ON_SUBMIT | REMEMBER_ME | ON_ERROR\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case emailChanged:\r\n            return {...state, login: action.value}\r\n        case passwordChanged:\r\n            return {...state, password: action.value}\r\n        case rememberMeChanged:\r\n            return {...state, rememberMe: action.value}\r\n        case onSubmit:\r\n            return {...state, isLoggedIn: true}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst emailChanged = 'emailChanged'\r\nconst passwordChanged = 'passwordChanged'\r\nconst rememberMeChanged = 'rememberMeChanged'\r\nconst onSubmit = 'onSubmit'\r\nexport const onError = 'onError'\r\n\r\nexport const emailChangedAC = (value: string) => ({type: emailChanged, value} as const)\r\nexport const passwordChangedAC = (value: string) => ({type: passwordChanged, value} as const)\r\nexport const rememberMeChangedAC = (value: boolean) => ({type: rememberMeChanged, value} as const)\r\nexport const onSubmitAC = () => ({type: onSubmit} as const)\r\nexport const onErrorAC = (error: string) => ({type: onError, error} as const)\r\n\r\n\r\n\r\nexport const onSubmitTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n\r\n        .then((res: AxiosResponse<AxiosResponseType>) => {\r\n            // console.log('you have logged in')\r\n            dispatch(onSubmitAC())\r\n            dispatch(profileAC(res.data._id, res.data.email, res.data.name, res.data.publicCardPacksCount, res.data.created,\r\n                res.data.updated, res.data.isAdmin, res.data.verified, res.data.rememberMe, res.data.avatar, res.data.error))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('you have not logged in')\r\n            const error = err.response\r\n            ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, FC, FormEvent} from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {\r\n    emailChangedAC,\r\n    InitialStateType,\r\n    onSubmitTC,\r\n    passwordChangedAC,\r\n    rememberMeChangedAC\r\n} from \"../../i1-main/m2-bll/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppRootStateType, InitialStateType>(s => s.isLoggedIn)\r\n\r\n\r\n    const loginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(emailChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const PasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(passwordChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const RememberMeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(rememberMeChangedAC(e.currentTarget.checked))\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(onSubmitTC({email: state.login, password: state.password, rememberMe: state.rememberMe}))\r\n    }\r\n\r\n\r\n    if (state.isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n\r\n            <form className={s.loginForm} onSubmit={handleSubmit}>\r\n                <div className={s.title}>Login</div>\r\n                <label className={s.inputItem}>\r\n                    <SuperInputText className={s.inputForm} onChange={loginChange} placeholder={'email'}\r\n                                    type={'email'} value={state.login} name={'login'}/>\r\n                </label >\r\n                <label className={s.inputItem}>\r\n                    <SuperInputText className={s.inputForm} onChange={PasswordChange} placeholder={'password'}\r\n                                    type={'password'} value={state.password} name={'login'}/>\r\n                </label>\r\n                <label className={s.inputItem}>\r\n                    <SuperCheckbox checked={state.rememberMe} onChange={RememberMeChange} name={'rememberMe'}>Remember me</SuperCheckbox>\r\n                </label>\r\n                <label>\r\n                    <SuperButton className={s.superButton} type={'submit'} value={'Login'}>Send</SuperButton>\r\n                </label>\r\n                {state.error !== ''\r\n                    ? <div className={s.message}>{state.error}</div>\r\n                    : null\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RegistrationAPI, RequestType} from \"../m3-dal/api\";\r\nimport {ON_ERROR, onError, onErrorAC} from \"./auth-reducer\";\r\n\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL',\r\n    CHANGE_PASSWORD = 'CHANGE_PASSWORD',\r\n    IS_REGISTRATION = 'IS_REGISTRATION'\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\nexport type InitialStateRegistrationType = typeof initialState\r\n\r\ntype ChangeEmailAT = ReturnType<typeof changeEmail>\r\ntype ChangePasswordAT = ReturnType<typeof changePassword>\r\ntype CheckRegistrationAT = ReturnType<typeof checkRegistration>\r\n\r\n\r\ntype ActionType =\r\n    | ChangeEmailAT\r\n    | ChangePasswordAT\r\n    | CheckRegistrationAT\r\n    | ON_ERROR\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateRegistrationType = initialState, action: ActionType): InitialStateRegistrationType => {\r\n    switch (action.type) {\r\n        case CHANGE_EMAIL:\r\n            return {...state, email: action.value}\r\n        case CHANGE_PASSWORD:\r\n            return {...state, password: action.value}\r\n        case IS_REGISTRATION:\r\n            return {...state, isRegistered: action.isRegistered}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ac\r\nexport const changeEmail = (value: string) => ({type: CHANGE_EMAIL, value} as const)\r\nexport const changePassword = (value: string) => ({type: CHANGE_PASSWORD, value} as const)\r\nconst checkRegistration = (isRegistered: boolean) => ({type: IS_REGISTRATION, isRegistered} as const)\r\n\r\n//tc\r\nexport const createUserTC = (dataRegistration: RequestType) => (dispatch: Dispatch) => {\r\n    RegistrationAPI.signUp({email: dataRegistration.email, password: dataRegistration.password})\r\n        .then((res) => {\r\n            if (res.status === 201) {\r\n                dispatch(checkRegistration(true))\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Registration.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {changeEmail, changePassword, createUserTC, InitialStateRegistrationType} from \"../../i1-main/m2-bll/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\n\r\nexport const Registration = () => {\r\n    const state = useSelector<AppRootStateType, InitialStateRegistrationType>(state=>state.isRegistered)\r\n    // const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const  dispatch = useDispatch()\r\n\r\n    const changeValueEvent = (e:React.ChangeEvent<HTMLInputElement>,changeValue:Function) => {\r\n        dispatch(changeValue( e.currentTarget.value))\r\n    }\r\n    const requestData =() => {\r\n        dispatch(createUserTC({email: state.email, password: state.password}))\r\n    }\r\n\r\n    if (state.isRegistered) {\r\n       return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.registration}>\r\n            <div className={s.registrationInner}>\r\n                <div className={s.title}>Sing up</div>\r\n\r\n                <div className={`${s.registrationItem} ${s.email}`}>\r\n                    <SuperInputText type='text' placeholder='Email' value={state.email} onChange={(e)=>changeValueEvent(e, changeEmail)}/>\r\n                </div>\r\n                <div className={`${s.registrationItem} ${s.password}`}>\r\n                    <SuperInputText type='password' placeholder='Password' value={state.password} onChange={(e)=>changeValueEvent(e, changePassword)}/>\r\n                </div>\r\n                    <SuperButton className={s.registrationButton} onClick={requestData}>Send</SuperButton>\r\n            </div>\r\n            {state.error !== ''\r\n                ? <div className={s.message}>{state.error}</div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const name = useSelector<AppRootStateType, string>(s => s.profile.name)\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(s => s.profile.avatar)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(s => s.profile.publicCardPacksCount)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <div>{`your name is ${name}`}</div>\r\n            {avatar ?<div>{`you face looks like this: ${avatar}`}</div> : null}\r\n            <div>{`there is ${publicCardPacksCount} cards available`}</div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, RequestRecoveryType, SetNewPasswordRequestType} from \"../m3-dal/api\";\r\nimport {onErrorAC} from \"./auth-reducer\";\r\n\r\ntype RecoveryStateType = typeof initialState\r\ntype SuccessfulActionType = ReturnType<typeof successful>\r\ntype ResponseRecoveryActionType = ReturnType<typeof responseRecoveryInfo>\r\ntype ResponseSetNewPasswordActionType = ReturnType<typeof responseSetNewPasswordInfo>\r\ntype SetNewPasswordActionType = ReturnType<typeof setNewPassword>\r\n\r\ntype ActionType = SuccessfulActionType | ResponseRecoveryActionType | ResponseSetNewPasswordActionType\r\n| SetNewPasswordActionType\r\n\r\nconst initialState = {\r\n    isDone: null,\r\n    recoveryInfo: \"\",\r\n    setNewPasswordInfo: \"\",\r\n    isNewPasswordSet: false\r\n}\r\n\r\nconst SUCCESSFUL = 'SUCCESSFUL'\r\nconst RESPONSE_RECOVERY_INFO = 'RESPONSE_RECOVERY_INFO'\r\nconst RESPONSE_SET_NEW_PASSWORD_INFO = 'RESPONSE_SET_NEW_PASSWORD_INFO'\r\nconst SET_NEW_PASSWORD = 'SET_NEW_PASSWORD'\r\n\r\n\r\nexport const recoveryReducer = (state: RecoveryStateType = initialState, action: ActionType): RecoveryStateType => {\r\n    switch (action.type) {\r\n        case SUCCESSFUL:\r\n            return <RecoveryStateType>{...state, isDone: action.value}\r\n        case RESPONSE_RECOVERY_INFO:\r\n            return {...state, recoveryInfo: action.info}\r\n        case RESPONSE_SET_NEW_PASSWORD_INFO:\r\n            return {...state, setNewPasswordInfo: action.info}\r\n        case SET_NEW_PASSWORD:\r\n            return {...state, isNewPasswordSet: true}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const successful = (value: boolean | null) => ({type: SUCCESSFUL, value} as const)\r\nexport const responseRecoveryInfo = (info: string) => ({type: RESPONSE_RECOVERY_INFO, info} as const)\r\nexport const responseSetNewPasswordInfo = (info: string) => ({type: RESPONSE_SET_NEW_PASSWORD_INFO, info} as const)\r\nexport const setNewPassword = () => ({type: SET_NEW_PASSWORD} as const)\r\n\r\nexport const recoveryPassword = (data: RequestRecoveryType) => (dispatch: Dispatch) => {\r\n    authAPI.recoverPassword(data)\r\n        .then((res) => {\r\n            // console.log('.then')\r\n            dispatch(successful(true))\r\n            dispatch(responseRecoveryInfo(res.data.info))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('.catch')\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\n    export const setNewPasswordTC = (data: SetNewPasswordRequestType) => (dispatch: Dispatch) => {\r\n    authAPI.setNewPassword(data)\r\n        .then((res) => {\r\n            console.log('.then')\r\n            dispatch(successful(true))\r\n            dispatch(setNewPassword())\r\n            dispatch(responseSetNewPasswordInfo (res.data.info))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('.catch')\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./Recovery.module.css\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoveryPassword, successful} from \"../../i1-main/m2-bll/recovery-reducer\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\n\r\nexport const Recovery = () => {\r\n\r\n    // const isDone = useSelector<AppRootStateType, boolean | null>( state => state.recovery.isDone)\r\n    const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const dispatch  = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"test@email.nya\")\r\n    const from = \"ai73a@yandex.by\"\r\n    let message: `<div style=\"background-color: lime; padding: 15px\">\t\r\npassword recovery link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n\r\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(successful(null))\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(recoveryPassword({email, from, message}))\r\n    }\r\n\r\n    return (\r\n        <div className={s.recovery}>\r\n            <span className={s.title}>Forgot password ?</span>\r\n            <SuperInputText onChange={changeHandler} placeholder={\"Enter you Email\"} value={email}/>\r\n            <SuperButton onClick={sendEmail} className={s.button}>Recover password</SuperButton>\r\n            {error !== ''\r\n                ? <div className={s.message}>{error}</div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./CreateNewPassword.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC, successful} from \"../../i1-main/m2-bll/recovery-reducer\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\ntype InfoType = {\r\n    isDone: null | boolean\r\n    recoveryInfo: string\r\n    setNewPasswordInfo: string\r\n}\r\ntype ParamTypes = {\r\n    token: string\r\n}\r\n\r\nexport const CreateNewPassword = () => {\r\n    //декоративная информация для показа что все ок\r\n    const info = useSelector<AppRootStateType, InfoType>( state => state.recovery)\r\n    const dispatch = useDispatch()\r\n    const [password, setPassword] = useState('')\r\n    //зануление свойство isDone для поподания обратно на страницу восстановления пароля\r\n    dispatch(successful(null))\r\n\r\n    const {token} = useParams<ParamTypes>()\r\n    console.log(token)\r\n\r\n    const changePassword = () => {\r\n        dispatch(setNewPasswordTC({password, token}))\r\n        console.log('inside the function',token)\r\n    }\r\n    const createPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.createNewPassword}>\r\n            <h4 className={s.title}>change password</h4>\r\n            <SuperInputText className={s.input} onChange={createPassword} value={password}/>\r\n            <SuperButton className={s.button} onClick={changePassword}>confirm</SuperButton>\r\n            {info && <div className={s.message}>{info}</div>}\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../rc1-SuperInputText/SuperInputText\";\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(true); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.superSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options?.map((el, i) => (\r\n        <option key={i}>\r\n            {el}\r\n        </option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={restProps.checked}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Test.module.css\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan\r\n    from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange\";\r\n\r\nexport const Test = () => {\r\n    const [checked, setChecked] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n    const arr = [\"Oxy\", \"Script\", \"Babushka\"];\r\n    const [value1, onChangeOption] = useState(arr[1]);\r\n    const [value2, setValue2] = useState(0);\r\n\r\n    const setMinValue = (newMinValue: number): void => {\r\n        setValue2(newMinValue)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.test}>\r\n            My SuperButtons are here\r\n            <div className={s.superComponent}>\r\n                1) <SuperButton red onClick={ () => alert('Good Job')}>Click on me</SuperButton>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                2) <SuperInputText/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                3) <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                4) <SuperEditableSpan value={value} onChangeText={setValue}\r\n                                      spanProps={{children: value ? undefined : \"you can edit me\"}}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                5) <SuperSelect options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                6) <SuperRadio name={\"radio\"} options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                7) <span>{value2}</span>\r\n                <SuperRange name={\"radio\"} value={value2} onChangeRange={setMinValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../u4-components/co2-Error404/Error404\";\r\nimport {Login} from \"../../../i2-features/f1-Login/Login\";\r\nimport {Registration} from \"../../../i2-features/f3-Registration/Registration\";\r\nimport {Profile} from \"../u4-components/co1-Profile/Profile\";\r\nimport {Recovery} from \"../../../i2-features/f2-Recovery/Recovery\";\r\nimport {CreateNewPassword} from \"../../../i2-features/f2-Recovery/CreateNewPassword\";\r\nimport {Test} from \"../../../i2-features/f0-test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY: '/recovery',\r\n    CREATE_NEW_PASSWORD: '/create_new_password',\r\n    TEST: '/super_inputs'\r\n\r\n\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                {/*<Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY} render={() => <Recovery/>}/>\r\n                <Route path={PATH.CREATE_NEW_PASSWORD} render={() => <CreateNewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n\r\n                <Route path={'/404'} render={() => <Error404/>}/>\r\n\r\n                {/*// add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Redirect from={'*'} to={'/404'}/>\r\n\r\n                {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../u3-routes/Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.nav_links}>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active}\r\n                             to={PATH.REGISTRATION}>Registration</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.PROFILE}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.RECOVERY}>Forgot\r\n                        Password?</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.CREATE_NEW_PASSWORD}>Change\r\n                        Password</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./u2-header/Header\";\nimport Routes from \"./u3-routes/Routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter >\n        <Header/>\n        <Routes/>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {}\r\n\r\nconst initialState: InitialStateType = {\r\n    testObj: {}\r\n}\r\n\r\nexport const testReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case firstCase:\r\n            return {...state}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\nconst firstCase = ''","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {testReducer} from \"./test-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\n\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    test: testReducer,\r\n    isLoggedIn: authReducer,\r\n    profile: profileReducer,\r\n    isRegistered: registrationReducer,\r\n    recovery: recoveryReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './i1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './i1-main/m2-bll/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}