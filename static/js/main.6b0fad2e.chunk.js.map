{"version":3,"sources":["i2-features/f1-Auth/f2-Recovery/Recovery.module.css","i1-main/m1-ui/u4-components/co2-Error404/Error404.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.module.css","i1-main/m1-ui/u1-common/c1-assets/images/girl-dancer.gif","i1-main/m1-ui/u4-components/co2-Error404/Error404.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox.tsx","i1-main/m3-dal/api.ts","i1-main/m2-bll/profile-reducer.ts","i1-main/m2-bll/auth-reducer.ts","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.tsx","i2-features/f1-Auth/f1-Login/Login.tsx","i1-main/m2-bll/registration-reducer.ts","i2-features/f1-Auth/f3-Registration/Registration.tsx","i1-main/m1-ui/u4-components/co1-Profile/Profile.tsx","i1-main/m2-bll/recovery-reducer.ts","i2-features/f1-Auth/f2-Recovery/Recovery.tsx","i2-features/f1-Auth/f2-Recovery/CreateNewPassword.tsx","i2-features/f1-Auth/f1-Login/Logout.tsx","i2-features/f2-Table/t1-Packs/packs-reducer.ts","i2-features/f2-Table/t2-Cards/cards-reducer.ts","i2-features/f2-Table/TableWrapper.tsx","i2-features/f2-Table/t2-Cards/Cards.tsx","i1-main/m1-ui/u3-routes/Routes.tsx","i1-main/m1-ui/u2-header/Header.tsx","i1-main/m1-ui/App.tsx","reportWebVitals.ts","i1-main/m2-bll/test-reducer.ts","i1-main/m2-bll/store.ts","index.tsx","i1-main/m1-ui/u2-header/Header.module.css","i2-features/f1-Auth/f1-Login/Login.module.css","i2-features/f1-Auth/f3-Registration/Registration.module.css","i2-features/f1-Auth/f2-Recovery/CreateNewPassword.module.css"],"names":["module","exports","Error404","className","s","error404","error404_text","girl","src","alt","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","instance","axios","create","baseURL","withCredentials","authAPI","data","post","cardsAPI","get","cardsPack","card","delete","initialState","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","profileChanged","login","password","isLoggedIn","emailChanged","passwordChanged","rememberMeChanged","onSubmit","onError","onLogout","onErrorAC","onSubmitTC","dispatch","then","res","avatar","catch","err","response","message","SuperButton","red","finalClassName","default","Login","useDispatch","state","useSelector","to","PATH","PROFILE","loginForm","preventDefault","title","inputItem","inputForm","placeholder","superButton","CHANGE_EMAIL","CHANGE_PASSWORD","IS_REGISTRATION","isRegistered","changeEmail","changePassword","createUserTC","dataRegistration","status","console","log","Registration","changeValueEvent","changeValue","LOGIN","registration","registrationInner","registrationItem","registrationButton","onClick","Profile","profile","isDone","recoveryInfo","setNewPasswordInfo","isNewPasswordSet","SUCCESSFUL","RESPONSE_RECOVERY_INFO","RESPONSE_SET_NEW_PASSWORD_INFO","SET_NEW_PASSWORD","successful","recoveryPassword","info","setNewPasswordTC","Recovery","recovery","useState","setEmail","CREATE_NEW_PASSWORD","event","from","button","CreateNewPassword","setPassword","resetPasswordToken","useParams","createNewPassword","input","Logout","useEffect","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getCardPacks","getPacksTC","cards","cardsTotalCount","maxGrade","Infinity","minGrade","packUserId","cardsPack_id","getCards","getCardsTC","cardsAC","TableWrapper","isModalVisible","setIsModalVisible","packName","setPackName","packs","columns","dataIndex","width","render","CARDS","sorter","compare","a","b","grade","multiple","size","cardsCount","map","pack","lastUpdate","substr","replace","myCallBack","id","visible","onOk","addPackTC","onCancel","rowKey","dataSource","onRow","record","bordered","pagination","position","defaultPageSize","pageSizeOptions","Cards","question","setQuestion","answer","setAnswer","card_id","find","f","TABLE","text","_","handleDelete","newCard","deleteTC","addCardTC","REGISTRATION","RECOVERY","LOGOUT","Routes","path","exact","Header","background","nav_links","nav_container","title_nav","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","testObj","firstCase","rootReducer","combineReducers","test","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b0fad2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"Recovery_recovery__7ban8\",\"title\":\"Recovery_title__3U_nk\",\"button\":\"Recovery_button__3WSC1\",\"message\":\"Recovery_message__10zGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1ry36\",\"error404_text\":\"Error404_error404_text__2VILg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1LYW_\",\"errorInput\":\"SuperInputText_errorInput__271Mi\",\"error\":\"SuperInputText_error__2roUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2QTKu\",\"red\":\"SuperButton_red__2B-7d\"};","export default __webpack_public_path__ + \"static/media/girl-dancer.cfef6556.gif\";","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport girl from '../../u1-common/c1-assets/images/girl-dancer.gif'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error404}>\r\n            <div className={s.error404_text}>404\r\n            Page not found!</div><br/>\r\n            <div className={s.girl}><img src={girl} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                value={restProps.value}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // const isChecked = e.currentTarget.checked\r\n        onChangeChecked &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n        onChange &&\r\n        onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import axios from \"axios\";\r\nimport {AxiosResponseType, LoginType} from \"../m2-bll/auth-reducer\";\r\n\r\n\r\n//'https://neko-back.herokuapp.com/2.0/'\r\n//\"http://localhost:7542/2.0/\"\r\n\r\n// 'valentyn.333k@gmail.com'\r\n// '111qwe222'\r\nconst instance  = axios.create ({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\nexport type RequestRecoveryType = {\r\n    email: string,\r\n    from?: string,\r\n    message?: string\r\n}\r\n\r\ntype RecoveryResponseType = {\r\n    info: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type RequestType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ResponseType = {\r\n    data: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type SetNewPasswordRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type SetNewPasswordResponseType = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport type CardPacksType = {\r\n    \"_id\": string,\r\n    \"user_id\": string,\r\n    \"user_name\": string,\r\n    \"private\": boolean,\r\n    \"name\": string,\r\n    \"path\": string,\r\n    \"grade\": number,\r\n    \"shots\": number,\r\n    \"cardsCount\": number,\r\n    \"type\": string,\r\n    \"rating\": number,\r\n    \"created\": string,\r\n    \"updated\": string,\r\n    \"more_id\": string,\r\n    \"__v\": number\r\n}\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<CardPacksType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n// export type PaginationType = {\r\n//     cardPacksTotalCount: number\r\n//     maxCardsCount: number\r\n//     minCardsCount: number\r\n//     page: number\r\n//     pageCount: number\r\n//     token: string\r\n// }\r\n\r\nexport type RequestPackType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\nexport type RespondCardsType = {\r\n    cards: Array<RespondCardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport type RespondCardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype CardsSetting = {\r\n\r\n}\r\n\r\nexport type RequestCardType = {\r\n    cardsPack_id: string\r\n}\r\nexport type NewCardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\nexport type OnCardAddType = {\r\n    newCard: NewCardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport const authAPI = {\r\n    recoverPassword(data: RequestRecoveryType) {\r\n        return  instance.post<RecoveryResponseType>('auth/forgot', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<AxiosResponseType>('auth/login', data)\r\n    },\r\n    setNewPassword(data: SetNewPasswordRequestType) {\r\n        return instance.post<SetNewPasswordResponseType>('auth/set-new-password', data)\r\n    },\r\n    signUp(data: RequestType) {\r\n        return instance.post<ResponseType>('auth/register', data)\r\n    },\r\n    ping() {\r\n        return instance.get('ping')\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    packs() {\r\n        // debugger\r\n        return instance.get(`cards/pack?pageCount=100`)\r\n        //?packName=english // не обязательно\r\n        // &min=3 // не обязательно\r\n        // &max=9 // не обязательно\r\n        // &sortPacks=0updated // не обязательно\r\n        // &page=1 // не обязательно\r\n        // &pageCount=4 // не обязательно\r\n    },\r\n    packsAdd(data: RequestPackType) {\r\n        return instance.post(`cards/pack`, {cardsPack: data})\r\n    },\r\n    cards(data: string) {\r\n        debugger\r\n        return instance.get(`cards/card/?cardsPack_id=${data}`)\r\n    },\r\n    cardAdd(data: {}) {\r\n        debugger\r\n        return instance.post(`cards/card/`, {card: data})\r\n    },\r\n    cardDelete(data: string) {\r\n        debugger\r\n        return instance.delete(`cards/card/?id=${data}`)\r\n    }\r\n}","import {AxiosResponseType} from \"./auth-reducer\";\r\n\r\nconst initialState: AxiosResponseType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype PROFILE = ReturnType<typeof profileAC>\r\n\r\n\r\ntype ActionsType = PROFILE\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case profileChanged:\r\n            return {\r\n                ...state,\r\n                _id: action._id,\r\n                email: action.email,\r\n                name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                created: action.created,\r\n                updated: action.updated,\r\n                isAdmin: action.isAdmin,\r\n                verified: action.verified,\r\n                rememberMe: action.rememberMe,\r\n                avatar: action.avatar,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst profileChanged = 'profileChanged'\r\n\r\n\r\nexport const profileAC = (\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    avatar?: string,\r\n    error?: string,\r\n) => ({type: profileChanged, _id, email, name, avatar, publicCardPacksCount, created,\r\n    updated, isAdmin, verified, rememberMe, error} as const)\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {profileAC} from \"./profile-reducer\";\r\n\r\ntype EMAIL_CHANGED = ReturnType<typeof emailChangedAC>\r\ntype PASSWORD_CHANGED = ReturnType<typeof passwordChangedAC>\r\ntype ON_SUBMIT = ReturnType<typeof onSubmitAC>\r\ntype REMEMBER_ME = ReturnType<typeof rememberMeChangedAC>\r\nexport type ON_ERROR = ReturnType<typeof onErrorAC>\r\nexport type ON_LOGOUT = ReturnType<typeof onLogoutAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\nexport type LoginType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nexport type AxiosResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nconst initialState = {\r\n    login: 'valentyn.333k@gmail.com',\r\n    password: '111qwe222',\r\n    rememberMe: false,\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\n\r\ntype ActionsType = EMAIL_CHANGED | PASSWORD_CHANGED | ON_SUBMIT | REMEMBER_ME | ON_ERROR\r\n | ON_LOGOUT\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case emailChanged:\r\n            return {...state, login: action.value}\r\n        case passwordChanged:\r\n            return {...state, password: action.value}\r\n        case rememberMeChanged:\r\n            return {...state, rememberMe: action.value}\r\n        case onSubmit:\r\n            return {...state, isLoggedIn: action.value}\r\n        case onLogout:\r\n            return {...state, isLoggedIn: action.value}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst emailChanged = 'emailChanged'\r\nconst passwordChanged = 'passwordChanged'\r\nconst rememberMeChanged = 'rememberMeChanged'\r\nconst onSubmit = 'onSubmit'\r\nexport const onError = 'onError'\r\nexport const onLogout = 'onLogout'\r\n\r\nexport const emailChangedAC = (value: string) => ({type: emailChanged, value} as const)\r\nexport const passwordChangedAC = (value: string) => ({type: passwordChanged, value} as const)\r\nexport const rememberMeChangedAC = (value: boolean) => ({type: rememberMeChanged, value} as const)\r\nexport const onSubmitAC = () => ({type: onSubmit, value: true} as const)\r\nexport const onLogoutAC = () => ({type: onLogout, value: false} as const)\r\nexport const onErrorAC  = (error: string) => ({type: onError, error} as const)\r\n\r\n\r\n\r\nexport const onSubmitTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n\r\n        .then((res: AxiosResponse<AxiosResponseType>) => {\r\n            // console.log('you have logged in')\r\n            dispatch(onSubmitAC())\r\n            dispatch(profileAC(res.data._id, res.data.email, res.data.name, res.data.publicCardPacksCount, res.data.created,\r\n                res.data.updated, res.data.isAdmin, res.data.verified, res.data.rememberMe, res.data.avatar, res.data.error))\r\n        })\r\n\r\n        .catch((err) => {\r\n            const error = err.response\r\n            ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, FC, FormEvent} from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport SuperInputText from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport {\r\n    emailChangedAC,\r\n    InitialStateType,\r\n    onSubmitTC,\r\n    passwordChangedAC,\r\n    rememberMeChangedAC\r\n} from \"../../../i1-main/m2-bll/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../i1-main/m1-ui/u3-routes/Routes\";\r\nimport SuperButton from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppRootStateType, InitialStateType>(s => s.isLoggedIn)\r\n\r\n\r\n    const loginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(emailChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const PasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(passwordChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const RememberMeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(rememberMeChangedAC(e.currentTarget.checked))\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(onSubmitTC({email: state.login, password: state.password, rememberMe: state.rememberMe}))\r\n    }\r\n\r\n\r\n    if (state.isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n\r\n            <form className={s.loginForm} onSubmit={handleSubmit}>\r\n                <div className={s.title}>Login</div>\r\n                <label className={s.inputItem}>\r\n                    <SuperInputText className={s.inputForm} onChange={loginChange} placeholder={'email'}\r\n                                    type={'email'} value={state.login} name={'login'}/>\r\n                </label >\r\n                <label className={s.inputItem}>\r\n                    <SuperInputText className={s.inputForm} onChange={PasswordChange} placeholder={'password'}\r\n                                    type={'password'} value={state.password} name={'login'}/>\r\n                </label>\r\n                <label className={s.inputItem}>\r\n                    <SuperCheckbox checked={state.rememberMe} onChange={RememberMeChange} name={'rememberMe'}>Remember me</SuperCheckbox>\r\n                </label>\r\n                <label>\r\n                    <SuperButton className={s.superButton} type={'submit'} value={'Login'}>Send</SuperButton>\r\n                </label>\r\n                {state.error !== ''\r\n                    ? <div className={s.message}>{state.error}</div>\r\n                    : null\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, RequestType} from \"../m3-dal/api\";\r\nimport {ON_ERROR, onError, onErrorAC} from \"./auth-reducer\";\r\n\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL',\r\n    CHANGE_PASSWORD = 'CHANGE_PASSWORD',\r\n    IS_REGISTRATION = 'IS_REGISTRATION'\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\nexport type InitialStateRegistrationType = typeof initialState\r\n\r\ntype ChangeEmailAT = ReturnType<typeof changeEmail>\r\ntype ChangePasswordAT = ReturnType<typeof changePassword>\r\ntype CheckRegistrationAT = ReturnType<typeof checkRegistration>\r\n\r\n\r\ntype ActionType =\r\n    | ChangeEmailAT\r\n    | ChangePasswordAT\r\n    | CheckRegistrationAT\r\n    | ON_ERROR\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateRegistrationType = initialState, action: ActionType): InitialStateRegistrationType => {\r\n    switch (action.type) {\r\n        case CHANGE_EMAIL:\r\n            return {...state, email: action.value}\r\n        case CHANGE_PASSWORD:\r\n            return {...state, password: action.value}\r\n        case IS_REGISTRATION:\r\n            return {...state, isRegistered: action.isRegistered}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//ac\r\nexport const changeEmail = (value: string) => ({type: CHANGE_EMAIL, value} as const)\r\nexport const changePassword = (value: string) => ({type: CHANGE_PASSWORD, value} as const)\r\nconst checkRegistration = (isRegistered: boolean) => ({type: IS_REGISTRATION, isRegistered} as const)\r\n\r\n//tc\r\nexport const createUserTC = (dataRegistration: RequestType) => (dispatch: Dispatch) => {\r\n    authAPI.signUp({email: dataRegistration.email, password: dataRegistration.password})\r\n        .then((res) => {\r\n            if (res.status === 201) {\r\n                dispatch(checkRegistration(true))\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Registration.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport {changeEmail, changePassword, createUserTC, InitialStateRegistrationType} from \"../../../i1-main/m2-bll/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../i1-main/m1-ui/u3-routes/Routes\";\r\nimport SuperButton from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\n\r\nexport const Registration = () => {\r\n    const state = useSelector<AppRootStateType, InitialStateRegistrationType>(state=>state.isRegistered)\r\n    // const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const  dispatch = useDispatch()\r\n\r\n    const changeValueEvent = (e:React.ChangeEvent<HTMLInputElement>,changeValue:Function) => {\r\n        dispatch(changeValue( e.currentTarget.value))\r\n    }\r\n    const requestData =() => {\r\n        dispatch(createUserTC({email: state.email, password: state.password}))\r\n    }\r\n\r\n    if (state.isRegistered) {\r\n       return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.registration}>\r\n            <div className={s.registrationInner}>\r\n                <div className={s.title}>Sing up</div>\r\n\r\n                <div className={`${s.registrationItem} ${s.email}`}>\r\n                    <SuperInputText type='text' placeholder='Email' value={state.email} onChange={(e)=>changeValueEvent(e, changeEmail)}/>\r\n                </div>\r\n                <div className={`${s.registrationItem} ${s.password}`}>\r\n                    <SuperInputText type='password' placeholder='Password' value={state.password} onChange={(e)=>changeValueEvent(e, changePassword)}/>\r\n                </div>\r\n                    <SuperButton className={s.registrationButton} onClick={requestData}>Send</SuperButton>\r\n            </div>\r\n            {state.error !== ''\r\n                ? <div className={s.message}>{state.error}</div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const name = useSelector<AppRootStateType, string>(s => s.profile.name)\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(s => s.profile.avatar)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(s => s.profile.publicCardPacksCount)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <div>{`your name is ${name}`}</div>\r\n            {avatar ?<div>{`you face looks like this: ${avatar}`}</div> : null}\r\n            <div>{`there is ${publicCardPacksCount} cards available`}</div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, RequestRecoveryType, SetNewPasswordRequestType} from \"../m3-dal/api\";\r\nimport {onErrorAC} from \"./auth-reducer\";\r\n\r\ntype RecoveryStateType = typeof initialState\r\ntype SuccessfulActionType = ReturnType<typeof successful>\r\ntype ResponseRecoveryActionType = ReturnType<typeof responseRecoveryInfo>\r\ntype ResponseSetNewPasswordActionType = ReturnType<typeof responseSetNewPasswordInfo>\r\ntype SetNewPasswordActionType = ReturnType<typeof setNewPassword>\r\n\r\ntype ActionType = SuccessfulActionType | ResponseRecoveryActionType | ResponseSetNewPasswordActionType\r\n| SetNewPasswordActionType\r\n\r\nconst initialState = {\r\n    isDone: false,\r\n    recoveryInfo: \"\",\r\n    setNewPasswordInfo: \"\",\r\n    isNewPasswordSet: false\r\n}\r\n\r\nconst SUCCESSFUL = 'SUCCESSFUL'\r\nconst RESPONSE_RECOVERY_INFO = 'RESPONSE_RECOVERY_INFO'\r\nconst RESPONSE_SET_NEW_PASSWORD_INFO = 'RESPONSE_SET_NEW_PASSWORD_INFO'\r\nconst SET_NEW_PASSWORD = 'SET_NEW_PASSWORD'\r\n\r\n\r\nexport const recoveryReducer = (state: RecoveryStateType = initialState, action: ActionType): RecoveryStateType => {\r\n    switch (action.type) {\r\n        case SUCCESSFUL:\r\n            return {...state, isDone: action.value}\r\n        case RESPONSE_RECOVERY_INFO:\r\n            return {...state, recoveryInfo: action.info}\r\n        case RESPONSE_SET_NEW_PASSWORD_INFO:\r\n            return {...state, setNewPasswordInfo: action.info}\r\n        case SET_NEW_PASSWORD:\r\n            return {...state, isNewPasswordSet: true}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const successful = (value: boolean) => ({type: SUCCESSFUL, value} as const)\r\nexport const responseRecoveryInfo = (info: string) => ({type: RESPONSE_RECOVERY_INFO, info} as const)\r\nexport const responseSetNewPasswordInfo = (info: string) => ({type: RESPONSE_SET_NEW_PASSWORD_INFO, info} as const)\r\nexport const setNewPassword = () => ({type: SET_NEW_PASSWORD} as const)\r\n\r\nexport const recoveryPassword = (data: RequestRecoveryType) => (dispatch: Dispatch) => {\r\n    authAPI.recoverPassword(data)\r\n        .then((res) => {\r\n            // console.log('.then')\r\n            dispatch(successful(true))\r\n            dispatch(responseRecoveryInfo(res.data.info))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('.catch')\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\n    export const setNewPasswordTC = (data: SetNewPasswordRequestType) => (dispatch: Dispatch) => {\r\n    authAPI.setNewPassword(data)\r\n\r\n        .then((res) => {\r\n            debugger\r\n            console.log('.then')\r\n            dispatch(successful(true))\r\n            dispatch(setNewPassword())\r\n            dispatch(responseSetNewPasswordInfo (res.data.info))\r\n        })\r\n\r\n        .catch((err) => {\r\n            console.log('')\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./Recovery.module.css\";\r\nimport SuperInputText from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoveryPassword, successful} from \"../../../i1-main/m2-bll/recovery-reducer\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\nexport const Recovery = () => {\r\n\r\n    const isDone = useSelector<AppRootStateType, boolean | null>( state => state.recovery.isDone)\r\n    const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const dispatch  = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"valentyn.333k@gmail.com\")\r\n    const from = \"neko.nyakus.cafe@gmail.com\"\r\n    let message = `<div>password recovery link: <a href='https://valentyn-999.github.io/cards-fr#/create_new_password/$token$'>link</a></div>`\r\n\r\n\r\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(successful(false))\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        debugger\r\n        dispatch(recoveryPassword({email, from, message}))\r\n    }\r\n\r\n    if (isDone) {\r\n        return <Redirect to={PATH.CREATE_NEW_PASSWORD}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.recovery}>\r\n            <span className={s.title}>Forgot password ?</span>\r\n            <SuperInputText onChange={changeHandler} placeholder={\"Enter you Email\"} value={email}/>\r\n            <SuperButton onClick={sendEmail} className={s.button}>Recover password</SuperButton>\r\n            {error !== ''\r\n                ? <div className={s.message}>{error}</div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"./CreateNewPassword.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC} from \"../../../i1-main/m2-bll/recovery-reducer\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport SuperInputText from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\n\r\ntype InfoType = {\r\n    isDone: boolean\r\n    recoveryInfo: string\r\n    setNewPasswordInfo: string\r\n    isNewPasswordSet: boolean\r\n}\r\ntype ParamTypes = {\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport const CreateNewPassword = () => {\r\n    // //декоративная информация для показа что все ок\r\n    const info = useSelector<AppRootStateType, InfoType>( state => state.recovery)\r\n    const dispatch = useDispatch()\r\n    const [password, setPassword] = useState('')\r\n    //зануление свойство isDone для поподания обратно на страницу восстановления пароля\r\n    // dispatch(successful(false))\r\n\r\n    const {resetPasswordToken} = useParams<ParamTypes>()\r\n    console.log(resetPasswordToken)\r\n\r\n    const changePassword = () => {\r\n        console.log('you are inside changePassword fn')\r\n        dispatch(setNewPasswordTC({password, resetPasswordToken}))\r\n        console.log('inside the function',resetPasswordToken)\r\n    }\r\n    const createPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    if (info.isNewPasswordSet) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.createNewPassword}>\r\n            <h4 className={s.title}>change password</h4>\r\n            <SuperInputText className={s.input} onChange={createPassword} value={password}/>\r\n            <SuperButton className={s.button} onClick={changePassword}>confirm</SuperButton>\r\n            {info && <div className={s.message}>{info.setNewPasswordInfo}</div>}\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport {onLogoutAC} from \"../../../i1-main/m2-bll/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\nexport const Logout: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        dispatch(onLogoutAC())\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    CardPacksType,\r\n    cardsAPI,\r\n    PacksResponseType,\r\n    RequestPackType\r\n} from \"../../../i1-main/m3-dal/api\";\r\nimport {AnyAction, Dispatch} from \"redux\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\nconst initialState = {\r\n    cardPacks: [] as Array<CardPacksType>,\r\n    cardPacksTotalCount: 14,\r\n    maxCardsCount: 4,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 4\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype CARD_PACKS = ReturnType<typeof cardPacksAC>\r\n\r\n\r\ntype ActionsType = CARD_PACKS\r\n\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case getCardPacks:\r\n            return {...state, cardPacks: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getCardPacks = 'getCardPacks'\r\n\r\n\r\n//ac\r\nexport const cardPacksAC = (data: Array<CardPacksType>) => ({ type: getCardPacks, data } as const )\r\n\r\n//tc\r\nexport const getPacksTC = () => (dispatch: Dispatch) => {\r\n    cardsAPI.packs()\r\n        .then((res:AxiosResponse<PacksResponseType>) => {\r\n            // debugger\r\n            console.log('.then')\r\n            dispatch(cardPacksAC(res.data.cardPacks))\r\n            // dispatch(responseRecoveryInfo(res.data.info))\r\n        })\r\n\r\n        .catch((err) => {\r\n            console.log('youu fucked up', err)\r\n\r\n        })\r\n}\r\n\r\nexport const addPackTC = (data: RequestPackType) => (dispatch: Dispatch) => {\r\n    cardsAPI.packsAdd(data)\r\n        .then((res: AxiosResponse) => {\r\n            // @ts-ignore\r\n            dispatch(getPacksTC());\r\n        })\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    RequestCardType,\r\n    CardPacksType,\r\n    cardsAPI,\r\n    RequestPackType,\r\n    RespondCardsType,\r\n    RespondCardType,\r\n    OnCardAddType\r\n} from \"../../../i1-main/m3-dal/api\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {getPacksTC} from \"../t1-Packs/packs-reducer\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<RespondCardType>,\r\n    cardsTotalCount: 20,\r\n    maxGrade: Infinity,\r\n    minGrade: Infinity,\r\n    page: 1,\r\n    pageCount: 1,\r\n    packUserId: '',\r\n    cardsPack_id: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype CARDS = ReturnType<typeof cardsAC>\r\ntype CURRENT_PACK = ReturnType<typeof currentPackIdAC>\r\n\r\n\r\ntype ActionsType = CARDS | CURRENT_PACK\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case getCards:\r\n            return {...state, cards: action.data}\r\n        case cardsPack_id:\r\n            return {...state, cardsPack_id: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getCards = 'getCards'\r\nconst cardsPack_id = 'cardsPack_id'\r\n\r\n\r\n//ac\r\nexport const cardsAC = (data: Array<RespondCardType>) => ({ type: getCards, data } as const )\r\nexport const currentPackIdAC = (value: string) => ({ type: cardsPack_id, value } as const )\r\n\r\n//tc\r\nexport const getCardsTC = (data: string) => (dispatch: Dispatch) => {\r\n    cardsAPI.cards(data)\r\n        .then((res: AxiosResponse<RespondCardsType>) => {\r\n            debugger\r\n            console.log('krasava!!!')\r\n            dispatch(cardsAC(res.data.cards))\r\n        })\r\n        .catch(err => {\r\n            console.log('lox', err)\r\n        })\r\n}\r\nexport const addCardTC = (data: {}) => (dispatch: Dispatch) => {\r\n    cardsAPI.cardAdd(data)\r\n        .then((res: AxiosResponse<OnCardAddType>) => {\r\n            debugger\r\n            // @ts-ignore\r\n            dispatch(getCardsTC(res.data.newCard.cardsPack_id));\r\n        })\r\n        .catch(err => {\r\n            console.log('ups bro', err)\r\n        })\r\n}\r\nexport const deleteTC = (data: string) => (dispatch: Dispatch) => {\r\n    cardsAPI.cardDelete(data)\r\n        .then((res: AxiosResponse<any>) => {\r\n            debugger\r\n            // @ts-ignore\r\n            dispatch(getCardsTC(res.data.newCard.cardsPack_id));\r\n        })\r\n        .catch(err => {\r\n            debugger\r\n            console.log('ups bro', err)\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Button, Input, Layout, Modal, Space, Table} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport {CardPacksType} from \"../../i1-main/m3-dal/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPackTC, getPacksTC} from './t1-Packs/packs-reducer';\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport {currentPackIdAC, getCardsTC} from \"./t2-Cards/cards-reducer\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\n\r\ninterface User {\r\n    key: string\r\n    name: string\r\n    cardsCount: number\r\n    lastUpdate: string\r\n    grade: number\r\n}\r\n\r\n\r\nexport const TableWrapper = () => {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [packName, setPackName] = useState(\"\")\r\n\r\n    const state = useSelector<AppRootStateType, Array<CardPacksType>>(s => s.packs.cardPacks)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSetName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(event.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        dispatch(addPackTC({name: packName}))\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n\r\n    const columns: ColumnsType<User> = [\r\n        //Название Колоды\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '20px',\r\n            render: (value: React.ReactNode) => {\r\n                return <div>\r\n                    <NavLink to={PATH.CARDS}>{value}</NavLink>\r\n                </div>;\r\n            },\r\n        },\r\n        //Оценка колоды\r\n        {\r\n            title: 'Grade',\r\n            dataIndex: 'grade',\r\n            key: 'grade',\r\n            sorter: {\r\n                compare: (a: any, b: any) => a.grade - b.grade,\r\n                multiple: 2\r\n            },\r\n            render: (grade: React.ReactNode) => (\r\n                <Space size=\"middle\">\r\n                    <div>{grade}</div>\r\n                </Space>\r\n            ),\r\n        },\r\n        //колиество карт в колоде\r\n        {\r\n            title: 'Cards Count',\r\n            dataIndex: 'cardsCount',\r\n            key: 'cardsCount',\r\n            sorter: {\r\n                compare: (a: any, b: any) => a.cardsCount - b.cardsCount,\r\n                multiple: 1\r\n            },\r\n        },\r\n        //посл. обновлен.\r\n        {\r\n            title: 'Last Update',\r\n            dataIndex: 'lastUpdate',\r\n            key: 'lastUpdate',\r\n        },\r\n        //actions\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: () => (\r\n                <Space size=\"middle\">\r\n                    <Button>Update</Button>\r\n                    <Button>Delete</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n        //\r\n    ];\r\n\r\n    const data: User[] = state.map((pack) => ({\r\n        name: pack.name,\r\n        cardsCount: pack.cardsCount,\r\n        lastUpdate: pack.updated.substr(0, 10).replace(/-/g, \" \"),\r\n        grade: pack.grade,\r\n        key: pack._id\r\n    }))\r\n\r\n\r\n    // function onChange(sorter: {}) {\r\n    //     // console.log('params', sorter);\r\n    // }\r\n    // function onPaginationChange(e: ChangeEvent<HTMLInputElement>) {\r\n    //     setRangeValue(+e.currentTarget.value)\r\n    // }\r\n\r\n    const myCallBack = (id: string) => {\r\n        debugger\r\n        dispatch(getCardsTC(id))\r\n        dispatch(currentPackIdAC(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                {/*<Header style={{backgroundColor: \"#ffffff\"}}>*/}\r\n                {/*    <Slider range defaultValue={[0, 100]}/>*/}\r\n                {/*</Header>*/}\r\n                <Button onClick={showModal}>Add Pack</Button>\r\n                <Modal title=\"Add Pack\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                    <span>Pack name: </span><Input onChange={handleSetName}/>\r\n                </Modal>\r\n                <Content>\r\n                    <Table<User>\r\n                        rowKey=\"uid\"\r\n                        dataSource={data}\r\n                        columns={columns}\r\n                        onRow={(record) => {\r\n                            return {\r\n                                onClick: () => { myCallBack(record.key) }, // click row\r\n                            };\r\n                        }}\r\n                        bordered\r\n                        pagination={{\r\n                            position: ['topRight'],\r\n                            defaultPageSize: 10,\r\n                            pageSizeOptions: ['3', '5', '10', '20', '25']\r\n                        }}\r\n\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n//pageSize: rangeValue","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../i1-main/m2-bll/store\";\r\nimport {CardPacksType, RespondCardType} from \"../../../i1-main/m3-dal/api\";\r\nimport {addPackTC, getPacksTC} from \"../t1-Packs/packs-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Button, Input, Layout, Modal, Space, Table} from \"antd\";\r\nimport {Content} from \"antd/es/layout/layout\";\r\nimport {addCardTC, deleteTC, getCardsTC, InitialStateType} from \"./cards-reducer\";\r\nimport {PATH} from \"../../../i1-main/m1-ui/u3-routes/Routes\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\n\r\ninterface User {\r\n    question: string\r\n    answer: string\r\n    grade: number\r\n    lastUpdate: string\r\n    key: string\r\n}\r\n\r\n\r\nexport const Cards = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [question, setQuestion] = useState(\"\")\r\n    const [answer, setAnswer] = useState(\"\")\r\n\r\n    const state = useSelector<AppRootStateType, Array<RespondCardType>>(s => s.cards.cards)\r\n    const cardsPack_id = useSelector<AppRootStateType, string>(s => s.cards.cardsPack_id)\r\n    const card_id = useSelector<AppRootStateType, RespondCardType | undefined>(s => s.cards.cards.find(f=> f._id))\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSetQuestion = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(event.currentTarget.value)\r\n    }\r\n    const handleSetAnswer = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(event.currentTarget.value)\r\n    }\r\n\r\n    // const packId = state.find(cr=> cr.cardsPack_id)\r\n    //\r\n    //\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     const packId = state.find(cr=> cr.cardsPack_id )\r\n    //     if (packId) {\r\n    //     dispatch(getCardsTC(cardsPack_id))\r\n    //     }\r\n    // }, [dispatch])\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        dispatch(addCardTC({cardsPack_id, question, answer, }))\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    if (cardsPack_id === '') {\r\n        return <Redirect to={PATH.TABLE}/>\r\n    }\r\n\r\n    const columns: ColumnsType<User> = [\r\n        {\r\n            title: 'Question',\r\n            dataIndex: 'question',\r\n            key: 'question',\r\n            width: '20px',\r\n            render: (text: string) => <div>{text}</div>\r\n        },\r\n        {\r\n            title: 'Answer',\r\n            dataIndex: 'answer',\r\n            key: 'answer',\r\n            width: '20px',\r\n            render: (text: string) => <div>{text}</div>\r\n        },\r\n        //Оценка колоды\r\n        {\r\n            title: 'Grade',\r\n            dataIndex: 'grade',\r\n            key: 'grade',\r\n            sorter: {\r\n                compare: (a: any, b: any) => a.grade - b.grade,\r\n                multiple: 2\r\n            },\r\n            render: (grade: React.ReactNode) => (\r\n                <Space size=\"middle\">\r\n                    <div>{grade}</div>\r\n                </Space>\r\n            ),\r\n        },\r\n        //посл. обновлен.\r\n        {\r\n            title: 'Last Update',\r\n            dataIndex: 'lastUpdate',\r\n            key: 'lastUpdate',\r\n        },\r\n        //actions\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (_: any, record: any) => (\r\n                <Space size=\"middle\">\r\n                    <Button onClick={handleDelete}>Delete</Button>\r\n                    <Button>Update</Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n    const handleDelete = () => {\r\n        debugger\r\n        if (card_id) {\r\n        dispatch(deleteTC(card_id._id))\r\n        }\r\n    };\r\n    const data: User[] = state.map((pack) => ({\r\n        question: pack.question,\r\n        answer: pack.answer,\r\n        grade: pack.grade,\r\n        lastUpdate: pack.updated.substr(0, 10).replace(/-/g, \" \"),\r\n        key: pack._id\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Button onClick={showModal}>Add Card</Button>\r\n                <Modal title=\"Add Card\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                    <span>Question: </span><Input value={question} onChange={handleSetQuestion}/>\r\n                    <span>Answer: </span><Input value={answer} onChange={handleSetAnswer}/>\r\n                </Modal>\r\n                <Content>\r\n                    <Table<User>\r\n                        dataSource={data}\r\n                        columns={columns}\r\n                        bordered\r\n                        pagination={{\r\n                            position: ['topRight'],\r\n                            defaultPageSize: 10,\r\n                            pageSizeOptions: ['3', '5', '10', '20', '25']\r\n                        }}\r\n                        //onChange={onChange}\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../u4-components/co2-Error404/Error404\";\r\nimport {Login} from \"../../../i2-features/f1-Auth/f1-Login/Login\";\r\nimport {Registration} from \"../../../i2-features/f1-Auth/f3-Registration/Registration\";\r\nimport {Profile} from \"../u4-components/co1-Profile/Profile\";\r\nimport {Recovery} from \"../../../i2-features/f1-Auth/f2-Recovery/Recovery\";\r\nimport {CreateNewPassword} from \"../../../i2-features/f1-Auth/f2-Recovery/CreateNewPassword\";\r\nimport {Logout} from \"../../../i2-features/f1-Auth/f1-Login/Logout\";\r\nimport {TableWrapper} from \"../../../i2-features/f2-Table/TableWrapper\";\r\nimport {Cards} from \"../../../i2-features/f2-Table/t2-Cards/Cards\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY: '/recovery',\r\n    CREATE_NEW_PASSWORD: '/create_new_password',\r\n    LOGOUT: '/logout',\r\n    TABLE: '/table',\r\n    CARDS: '/cards'\r\n\r\n\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                 {/*в начале мы попадаем  на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                {/*<Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                {/*<Route path={PATH.RECOVERY} render={() => <Recovery/>}/>*/}\r\n                <Route path={`${PATH.CREATE_NEW_PASSWORD}/:resetPasswordToken`}  render={() => <CreateNewPassword/>}/>\r\n                <Route path={PATH.RECOVERY} exact render={() => <Recovery/>}/>\r\n                <Route path={PATH.LOGOUT} render={() => <Logout/>}/>\r\n                <Route path={PATH.TABLE} render={() => <TableWrapper/>}/>\r\n\r\n                <Route path={`${PATH.CARDS}/:packToken`} render={() => <Cards/>}/>\r\n                <Route path={`${PATH.CARDS}`} exact render={() => <Cards/>}/>\r\n\r\n\r\n\r\n                <Route path={'/404'} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../u3-routes/Routes\";\r\nimport s from './Header.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\n\r\nfunction Header() {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    return (\r\n        <div className={s.background}>\r\n            {!isLoggedIn ?\r\n                <div className={s.nav_links}>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                    </div>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active}\r\n                                 to={PATH.REGISTRATION}>Registration</NavLink>\r\n                    </div>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.RECOVERY}>Forgot\r\n                            Password?</NavLink>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className={s.nav_links}>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.PROFILE}>Profile</NavLink>\r\n                    </div>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.TABLE}>Table</NavLink>\r\n                    </div>\r\n                    <div className={s.nav_container}>\r\n                        <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.LOGOUT}>Logout</NavLink>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./u2-header/Header\";\nimport Routes from \"./u3-routes/Routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter >\n        <Header/>\n        <Routes/>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {}\r\n\r\nconst initialState: InitialStateType = {\r\n    testObj: {}\r\n}\r\n\r\nexport const testReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case firstCase:\r\n            return {...state}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\nconst firstCase = ''","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {testReducer} from \"./test-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {packsReducer} from \"../../i2-features/f2-Table/t1-Packs/packs-reducer\";\r\nimport {cardsReducer} from \"../../i2-features/f2-Table/t2-Cards/cards-reducer\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    test: testReducer,\r\n    isLoggedIn: authReducer,\r\n    profile: profileReducer,\r\n    isRegistered: registrationReducer,\r\n    recovery: recoveryReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './i1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './i1-main/m2-bll/store';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Header_background__3d8e3\",\"nav_links\":\"Header_nav_links__2fY8Y\",\"nav_container\":\"Header_nav_container__20c2T\",\"title_nav\":\"Header_title_nav__3-n7c\",\"active\":\"Header_active__35kSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2iPmy\",\"loginForm\":\"Login_loginForm__AYLAX\",\"title\":\"Login_title__Nx4Wo\",\"message\":\"Login_message__3XIc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__Gz9l-\",\"registrationInner\":\"Registration_registrationInner__1ikOA\",\"title\":\"Registration_title__3nqo_\",\"message\":\"Registration_message__3rORD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createNewPassword\":\"CreateNewPassword_createNewPassword__14jYR\",\"button\":\"CreateNewPassword_button__1zOYG\"};"],"sourceRoot":""}