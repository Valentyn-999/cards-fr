{"version":3,"sources":["i2-features/f0-test/Test.module.css","i1-main/m1-ui/u4-components/co2-Registration/Registration.module.css","i1-main/m1-ui/u4-components/co1-Login/Login.module.css","i1-main/m1-ui/u4-components/co5-Recovery/Recovery.module.css","i1-main/m1-ui/u4-components/co5-Recovery/CreateNewPassword.module.css","i1-main/m1-ui/u4-components/co4-Error404/Error404.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.module.css","i1-main/m1-ui/u2-header/Header.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.module.css","i1-main/m1-ui/u1-common/c1-assets/images/girl-dancer.gif","i1-main/m1-ui/u4-components/co4-Error404/Error404.tsx","i1-main/m3-dal/api.ts","i1-main/m1-ui/u4-components/co2-Registration/registration-reducer.ts","i1-main/m1-ui/u4-components/co2-Registration/Registration.tsx","i1-main/m1-ui/u4-components/co3-Profile/Profile.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.tsx","i1-main/m1-ui/u4-components/co3-Profile/profile-reducer.ts","i1-main/m1-ui/u4-components/co1-Login/auth-reducer.ts","i1-main/m1-ui/u4-components/co5-Recovery/Recovery-reducer.ts","i1-main/m1-ui/u4-components/co5-Recovery/Recovery.tsx","i1-main/m1-ui/u4-components/co5-Recovery/CreateNewPassword.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.tsx","i2-features/f0-test/Test.tsx","i2-features/f1 Login/LoginContainer.tsx","i1-main/m1-ui/u4-components/co1-Login/Login.tsx","i1-main/m1-ui/u3-routes/Routes.tsx","i1-main/m1-ui/u2-header/Header.tsx","i1-main/m1-ui/App.tsx","reportWebVitals.ts","i1-main/m2-bll/test-reducer.ts","i1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error404","error404_text","girl","src","alt","instance","axios","create","baseURL","withCredentials","authAPI","data","post","APIRegistration","CHANGE_EMAIL","CHANGE_PASSWORD","IS_REGISTRATION","initialState","isRegistered","email","password","changeEmail","value","type","changePassword","createUserTC","dataRegistration","dispatch","then","res","status","console","log","catch","e","Registration","state","useSelector","useDispatch","changeValueEvent","changeValue","currentTarget","to","PATH","LOGIN","registration","registrationInner","registrationItem","placeholder","onChange","registrationButton","onClick","Profile","name","profile","avatar","publicCardPacksCount","isLoggedIn","SuperInputText","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","key","SuperButton","red","finalClassName","default","_id","created","Date","updated","isAdmin","verified","rememberMe","profileChanged","login","emailChanged","passwordChanged","rememberMeChanged","onSubmit","onError","onErrorAC","onSubmitTC","err","response","message","isDone","info","successful","Recovery","recovery","useState","setEmail","title","event","button","CREATE_NEW_PASSWORD","CreateNewPassword","createNewPassword","input","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","Test","setChecked","setValue","arr","value1","value2","setValue2","test","superComponent","alert","undefined","newMinValue","LoginContainer","connect","onLoginChange","emailChangedAC","onPasswordChange","passwordChangedAC","onRememberMeChange","rememberMeChangedAC","totalValues","PROFILE","loginForm","inputForm","REGISTRATION","RECOVERY","TEST","Routes","path","exact","render","from","Header","background","nav_links","nav_container","title_nav","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","testObj","firstCase","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3812f36a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__2Q38G\",\"superComponent\":\"Test_superComponent__1Whms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__2-PqV\",\"registrationInner\":\"Registration_registrationInner__2usjE\",\"registrationItem\":\"Registration_registrationItem__2cBsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__iLPBu\",\"loginForm\":\"Login_loginForm__YkpQe\",\"inputForm\":\"Login_inputForm__gDzfx\",\"message\":\"Login_message__12-Hj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"Recovery_recovery__3KOXF\",\"title\":\"Recovery_title__MYuIP\",\"button\":\"Recovery_button__2dEZ5\",\"message\":\"Recovery_message__1VIgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createNewPassword\":\"CreateNewPassword_createNewPassword__Cs8Jz\",\"button\":\"CreateNewPassword_button__1VtgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__37KB9\",\"error404_text\":\"Error404_error404_text__uBnK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1LYW_\",\"errorInput\":\"SuperInputText_errorInput__271Mi\",\"error\":\"SuperInputText_error__2roUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2QTKu\",\"red\":\"SuperButton_red__2B-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Header_background__3d8e3\",\"nav_links\":\"Header_nav_links__2fY8Y\",\"nav_container\":\"Header_nav_container__20c2T\",\"title_nav\":\"Header_title_nav__3-n7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__RTEUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2ayCc\"};","export default __webpack_public_path__ + \"static/media/girl-dancer.cfef6556.gif\";","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport girl from '../../u1-common/c1-assets/images/girl-dancer.gif'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error404}>\r\n            <div className={s.error404_text}>404\r\n            Page not found!</div><br/>\r\n            <div className={s.girl}><img src={girl} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import axios from \"axios\";\r\nimport {AxiosResponseType, LoginType} from \"../m1-ui/u4-components/co1-Login/auth-reducer\";\r\nimport { RequestRecoveryType } from \"../m1-ui/u4-components/co5-Recovery/Recovery-reducer\";\r\n\r\nconst instance  = axios.create ({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\ntype RecoveryResponseType = {\r\n    info: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type RequestType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ResponseType = {\r\n    data: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    recoverPassword(data: RequestRecoveryType) {\r\n        return  instance.post<RecoveryResponseType>('auth/forgot', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<AxiosResponseType>('auth/login', data)\r\n    },\r\n}\r\n\r\nexport const APIRegistration = {\r\n    signUp(data: RequestType) {\r\n        return instance.post<ResponseType>('auth/register', data)\r\n    },\r\n    ping() {\r\n        return instance.get('ping')\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {APIRegistration, RequestType} from \"../../../m3-dal/api\";\r\n\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL',\r\n    CHANGE_PASSWORD = 'CHANGE_PASSWORD',\r\n    IS_REGISTRATION = 'IS_REGISTRATION'\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    email: '',\r\n    password: '',\r\n}\r\nexport type InitialStateRegistrationType = typeof initialState\r\n\r\ntype ChangeEmailAT = ReturnType<typeof changeEmail>\r\ntype ChangePasswordAT = ReturnType<typeof changePassword>\r\ntype CheckRegistrationAT = ReturnType<typeof checkRegistration>\r\n\r\n\r\ntype ActionType =\r\n    | ChangeEmailAT\r\n    | ChangePasswordAT\r\n    | CheckRegistrationAT\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateRegistrationType = initialState, action: ActionType): InitialStateRegistrationType => {\r\n    switch (action.type) {\r\n        case CHANGE_EMAIL:\r\n            return ({\r\n                    ...state,\r\n                    email: action.value\r\n                }\r\n            )\r\n        case CHANGE_PASSWORD:\r\n            return ({\r\n                    ...state,\r\n                    password: action.value\r\n                }\r\n            )\r\n        case IS_REGISTRATION:\r\n            return ({\r\n                    ...state,\r\n                    isRegistered: action.isRegistered\r\n                }\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeEmail = (value: string) => {\r\n    return {\r\n        type: CHANGE_EMAIL,\r\n        value\r\n    } as const\r\n}\r\nexport const changePassword = (value: string) => {\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        value\r\n    } as const\r\n}\r\n\r\nconst checkRegistration = (isRegistered: boolean) => {\r\n    return {\r\n        type: IS_REGISTRATION,\r\n        isRegistered\r\n    } as const\r\n}\r\n\r\nexport const createUserTC = (dataRegistration: RequestType) => (dispatch: Dispatch) => {\r\n    APIRegistration.signUp({email: dataRegistration.email, password: dataRegistration.password})\r\n        .then((res) => {\r\n            if (res.status === 201) {\r\n                dispatch(checkRegistration(true))\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Registration.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {changeEmail, changePassword, createUserTC, InitialStateRegistrationType} from \"./registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Registration = () => {\r\n    const state = useSelector<AppRootStateType, InitialStateRegistrationType>(state=>state.isRegistered)\r\n    // const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const  dispatch = useDispatch()\r\n\r\n    const changeValueEvent = (e:React.ChangeEvent<HTMLInputElement>,changeValue:Function) => {\r\n        dispatch(changeValue( e.currentTarget.value))\r\n    }\r\n    const requestData =() => {\r\n        dispatch(createUserTC({email: state.email, password: state.password}))\r\n    }\r\n\r\n    if (state.isRegistered) {\r\n       return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.registration}>\r\n            <div className={s.registrationInner}>\r\n                <div className={`${s.registrationItem} ${s.email}`}>\r\n                    <input type='text' placeholder='Email' value={state.email} onChange={(e)=>changeValueEvent(e, changeEmail)}/>\r\n                </div>\r\n                <div className={`${s.registrationItem} ${s.password}`}>\r\n                    <input type='password' placeholder='Password' value={state.password} onChange={(e)=>changeValueEvent(e, changePassword)}/>\r\n                </div>\r\n                <div className={s.registrationButton} >\r\n                    <button onClick={requestData}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const name = useSelector<AppRootStateType, string>(s => s.profile.name)\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(s => s.profile.avatar)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(s => s.profile.publicCardPacksCount)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <div>{`your name is ${name}`}</div>\r\n            {avatar ?<div>{`you face looks like this: ${avatar}`}</div> : null}\r\n            <div>{`there is ${publicCardPacksCount} cards available`}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                value={restProps.value}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import {AxiosResponseType} from \"../co1-Login/auth-reducer\";\r\n\r\nconst initialState: AxiosResponseType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype PROFILE = ReturnType<typeof profileAC>\r\n\r\n\r\ntype ActionsType = PROFILE\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case profileChanged:\r\n            return {\r\n                ...state,\r\n                _id: action._id,\r\n                email: action.email,\r\n                name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                created: action.created,\r\n                updated: action.updated,\r\n                isAdmin: action.isAdmin,\r\n                verified: action.verified,\r\n                rememberMe: action.rememberMe,\r\n                avatar: action.avatar,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// const firstCase = ''\r\nconst profileChanged = 'profileChanged'\r\n\r\n\r\n\r\nexport const profileAC = (\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    avatar?: string,\r\n    error?: string,\r\n) => ({type: profileChanged, _id, email, name, avatar, publicCardPacksCount, created,\r\n    updated, isAdmin, verified, rememberMe, error} as const)\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../../m3-dal/api\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {profileAC} from \"../co3-Profile/profile-reducer\";\r\n\r\ntype EMAIL_CHANGED = ReturnType<typeof emailChangedAC>\r\ntype PASSWORD_CHANGED = ReturnType<typeof passwordChangedAC>\r\ntype ON_SUBMIT = ReturnType<typeof onSubmitAC>\r\ntype REMEMBER_ME = ReturnType<typeof rememberMeChangedAC>\r\ntype ON_ERROR = ReturnType<typeof onErrorAC>\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\n\r\nexport type LoginType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nexport type AxiosResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nconst initialState = {\r\n    login: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\n\r\ntype ActionsType = EMAIL_CHANGED | PASSWORD_CHANGED | ON_SUBMIT | REMEMBER_ME | ON_ERROR\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case emailChanged:\r\n            return {...state, login: action.value}\r\n        case passwordChanged:\r\n            return {...state, password: action.value}\r\n        case rememberMeChanged:\r\n            return {...state, rememberMe: action.value}\r\n        case onSubmit:\r\n            return {...state, isLoggedIn: true}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst emailChanged = 'emailChanged'\r\nconst passwordChanged = 'passwordChanged'\r\nconst rememberMeChanged = 'rememberMeChanged'\r\nconst onSubmit = 'onSubmit'\r\nconst onError = 'onError'\r\n\r\nexport const emailChangedAC = (value: string) => ({type: emailChanged, value} as const)\r\nexport const passwordChangedAC = (value: string) => ({type: passwordChanged, value} as const)\r\nexport const rememberMeChangedAC = (value: boolean) => ({type: rememberMeChanged, value} as const)\r\nexport const onSubmitAC = () => ({type: onSubmit} as const)\r\nexport const onErrorAC = (error: string) => ({type: onError, error} as const)\r\n\r\n\r\n\r\nexport const onSubmitTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n\r\n        .then((res: AxiosResponse<AxiosResponseType>) => {\r\n            // console.log('you have logged in')\r\n            dispatch(onSubmitAC())\r\n            dispatch(profileAC(res.data._id, res.data.email, res.data.name, res.data.publicCardPacksCount, res.data.created,\r\n                res.data.updated, res.data.isAdmin, res.data.verified, res.data.rememberMe, res.data.avatar, res.data.error))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('you have not logged in')\r\n            const error = err.response\r\n            ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../../m3-dal/api\";\r\nimport {onErrorAC} from \"../co1-Login/auth-reducer\";\r\n\r\n\r\ntype ActionType = SuccessfulActionType\r\n    | ResponseInfoActionType\r\n\r\nconst initialState = {\r\n    isDone: null,\r\n    info: \"\"\r\n}\r\nexport type RequestRecoveryType = {\r\n    email: string,\r\n    from?: string,\r\n    message?: string\r\n}\r\n\r\nexport const recoveryReducer = (state: RecoveryStateType = initialState, action: ActionType): RecoveryStateType => {\r\n    switch (action.type) {\r\n        case \"SUCCESSFUL\":\r\n            return <RecoveryStateType>{...state, isDone: action.value}\r\n        case \"RESPONSE_INFO\":\r\n            return {...state, info: action.info}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const successful = (value: boolean | null) => ({type: \"SUCCESSFUL\", value} as const )\r\nexport const responseInfo = (info: string) => ({type: \"RESPONSE_INFO\", info} as const)\r\n\r\nexport const recoveryPassword = (data: RequestRecoveryType) => (dispatch: Dispatch) => {\r\n    authAPI.recoverPassword(data)\r\n        .then(res => {\r\n            dispatch(successful(true))\r\n            dispatch(responseInfo(res.data.info))\r\n        })\r\n\r\n        .catch(err => {\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\ntype RecoveryStateType = typeof initialState\r\ntype SuccessfulActionType = ReturnType<typeof successful>\r\ntype ResponseInfoActionType = ReturnType<typeof responseInfo>","import React, {useState} from \"react\";\r\nimport s from \"./Recovery.module.css\";\r\nimport SuperInputText from \"../SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport { ChangeEvent } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoveryPassword, successful} from \"./Recovery-reducer\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Recovery = () => {\r\n\r\n    const isDone = useSelector<AppRootStateType, boolean | null>( state => state.recovery.isDone)\r\n    const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const dispatch  = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"test@email.nya\")\r\n\r\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(successful(null))\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(recoveryPassword({email}))\r\n    }\r\n    return (\r\n        <div className={s.recovery}>\r\n            <span className={s.title}>Forgot password ?</span>\r\n            <SuperInputText onChange={changeHandler} placeholder={\"Enter you Email\"}/>\r\n            <SuperButton onClick={sendEmail} className={s.button}>Recover password</SuperButton>\r\n            {isDone === null \r\n                ? <div className={s.message}>enter you email</div> \r\n                : isDone\r\n                    ? <Redirect to={PATH.CREATE_NEW_PASSWORD}  />\r\n                    : <div className={s.message}>email incorrect {error}</div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./CreateNewPassword.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {successful} from \"./Recovery-reducer\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport SuperInputText from \"../SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../SuperComponents/rc2-SuperButton/SuperButton\";\r\n\r\n\r\nexport const CreateNewPassword = () => {\r\n    //декоративная информация для показа что все ок\r\n    const info = useSelector<AppRootStateType, string>( state => state.recovery.info)\r\n    const dispatch = useDispatch()\r\n    //зануление свойство isDone для поподания обратно на страницу восстановления пароля\r\n    dispatch(successful(null))\r\n\r\n    return (\r\n        <div className={s.createNewPassword}>\r\n            <h4 className={s.title}>change password</h4>\r\n            <SuperInputText className={s.input}/>\r\n            <SuperButton className={s.button}>confirm</SuperButton>\r\n            {info && <div className={s.message}>{info}</div>}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // const isChecked = e.currentTarget.checked\r\n        onChangeChecked &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n        onChange &&\r\n        onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../rc1-SuperInputText/SuperInputText\";\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(true); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.superSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options?.map((el, i) => (\r\n        <option key={i}>\r\n            {el}\r\n        </option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={restProps.checked}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Test.module.css\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan\r\n    from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange\";\r\n\r\nexport const Test = () => {\r\n    const [checked, setChecked] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n    const arr = [\"Oxy\", \"Script\", \"Babushka\"];\r\n    const [value1, onChangeOption] = useState(arr[1]);\r\n    const [value2, setValue2] = useState(0);\r\n\r\n    const setMinValue = (newMinValue: number): void => {\r\n        setValue2(newMinValue)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.test}>\r\n            My SuperButtons are here\r\n            <div className={s.superComponent}>\r\n                1) <SuperButton red onClick={ () => alert('Good Job')}>Click on me</SuperButton>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                2) <SuperInputText/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                3) <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                4) <SuperEditableSpan value={value} onChangeText={setValue}\r\n                                      spanProps={{children: value ? undefined : \"you can edit me\"}}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                5) <SuperSelect options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                6) <SuperRadio name={\"radio\"} options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                7) <span>{value2}</span>\r\n                <SuperRange name={\"radio\"} value={value2} onChangeRange={setMinValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, FormEvent} from \"react\";\r\nimport {Login} from \"../../i1-main/m1-ui/u4-components/co1-Login/Login\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as events from \"events\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    emailChangedAC,\r\n    onSubmitTC,\r\n    passwordChangedAC,\r\n    rememberMeChangedAC\r\n} from \"../../i1-main/m1-ui/u4-components/co1-Login/auth-reducer\";\r\n\r\n    // const dispatch = useDispatch()\r\n\r\ntype MapStateToPropsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    isLoggedIn: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    onLoginChange: (value: string) => void\r\n    onPasswordChange: (value: string) => void\r\n    onRememberMeChange: (value: boolean) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToPropsType => {\r\n    return {\r\n        email: state.isLoggedIn.login,\r\n        password: state.isLoggedIn.password,\r\n        rememberMe: state.isLoggedIn.rememberMe,\r\n        isLoggedIn: state.isLoggedIn.isLoggedIn\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        onLoginChange: (value) => {\r\n            dispatch(emailChangedAC(value))\r\n        },\r\n        onPasswordChange: (value) => {\r\n            dispatch(passwordChangedAC(value))\r\n        },\r\n        onRememberMeChange: (value) => {\r\n            dispatch(rememberMeChangedAC(value))\r\n        }\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppRootStateType>(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nexport default LoginContainer;","import React, {ChangeEvent, FC} from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport SuperInputText from \"../SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {onSubmitTC} from \"./auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\ntype PropsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    isLoggedIn: boolean\r\n    onLoginChange: (value: string) => void\r\n    onPasswordChange: (value: string) => void\r\n    onRememberMeChange: (value: boolean) => void\r\n}\r\n\r\n\r\nexport const Login: FC<PropsType> = (\r\n    {\r\n        email,password,\r\n        rememberMe,isLoggedIn,\r\n        onLoginChange, onPasswordChange, onRememberMeChange\r\n\r\n\r\n    }\r\n\r\n) => {\r\n\r\n    const dispatch = useDispatch()\r\n    // const email = useSelector<AppRootStateType, string>(s => s.isLoggedIn.login)\r\n    // const password = useSelector<AppRootStateType, string>(s => s.isLoggedIn.password)\r\n    // const rememberMe = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.rememberMe)\r\n\r\n    // const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n    // const newError = useSelector<AppRootStateType, string>(s => s.isLoggedIn.error)\r\n    const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const totalValues = {email, password, rememberMe}\r\n\r\n\r\n    const loginChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        onLoginChange(event.currentTarget.value)\r\n    }\r\n    const PasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        onPasswordChange(event.currentTarget.value)\r\n    }\r\n    const RememberMeChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        onRememberMeChange(event.currentTarget.checked)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(onSubmitTC(totalValues))\r\n    }\r\n\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n\r\n            <form className={s.loginForm} onSubmit={handleSubmit}>\r\n                <label>\r\n                    <SuperInputText className={s.inputForm} onChange={loginChange} placeholder={'email'}\r\n                                    type={'email'} value={email}/>\r\n                </label>\r\n                <label>\r\n                    <SuperInputText className={s.inputForm} onChange={PasswordChange} placeholder={'password'}\r\n                                    type={'password'} value={password}/>\r\n                </label>\r\n                <label>\r\n                    <SuperCheckbox checked={rememberMe} onChange={RememberMeChange}>Remember me</SuperCheckbox>\r\n                </label>\r\n                <label>\r\n                    <SuperInputText type={'submit'} value={'Login'}/>\r\n                </label>\r\n                {error === ''\r\n                    ? <div className={s.message}>enter you email and password</div>\r\n                    : <div className={s.message}>{error}</div>\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../u4-components/co4-Error404/Error404\";\r\nimport {Login} from \"../u4-components/co1-Login/Login\";\r\nimport {Registration} from \"../u4-components/co2-Registration/Registration\";\r\nimport {Profile} from \"../u4-components/co3-Profile/Profile\";\r\nimport {Recovery} from \"../u4-components/co5-Recovery/Recovery\";\r\nimport {CreateNewPassword} from \"../u4-components/co5-Recovery/CreateNewPassword\";\r\nimport {Test} from \"../../../i2-features/f0-test/Test\";\r\nimport LoginContainer from \"../../../i2-features/f1 Login/LoginContainer\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY: '/recovery',\r\n    CREATE_NEW_PASSWORD: '/create_new_password',\r\n    TEST: '/super_inputs'\r\n\r\n\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                {/*<Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY} render={() => <Recovery/>}/>\r\n                <Route path={PATH.CREATE_NEW_PASSWORD} render={() => <CreateNewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n\r\n                <Route path={'/404'} render={() => <Error404/>}/>\r\n\r\n                {/*// add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Redirect from={'*'} to={'/404'}/>\r\n\r\n                {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../u3-routes/Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.nav_links}>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active}\r\n                             to={PATH.REGISTRATION}>Registration</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.PROFILE}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.RECOVERY}>Forgot\r\n                        Password?</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.CREATE_NEW_PASSWORD}>Change\r\n                        Password</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.TEST}>Super Buttons</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={'/404'}>404 Error</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./u2-header/Header\";\nimport Routes from \"./u3-routes/Routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter >\n        <Header/>\n        <Routes/>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {}\r\n\r\nconst initialState: InitialStateType = {\r\n    testObj: {}\r\n}\r\n\r\nexport const testReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case firstCase:\r\n            return {...state}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\nconst firstCase = ''","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {testReducer} from \"./test-reducer\";\r\nimport {authReducer} from \"../m1-ui/u4-components/co1-Login/auth-reducer\";\r\nimport {profileReducer} from \"../m1-ui/u4-components/co3-Profile/profile-reducer\";\r\nimport {registrationReducer} from \"../m1-ui/u4-components/co2-Registration/registration-reducer\";\r\nimport { recoveryReducer } from '../m1-ui/u4-components/co5-Recovery/Recovery-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    test: testReducer,\r\n    isLoggedIn: authReducer,\r\n    profile: profileReducer,\r\n    isRegistered: registrationReducer,\r\n    recovery: recoveryReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './i1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './i1-main/m2-bll/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}