{"version":3,"sources":["i2-features/f3-Registration/Registration.module.css","i2-features/f0-test/Test.module.css","i2-features/f1-Login/Login.module.css","i2-features/f2-Recovery/Recovery.module.css","i2-features/f2-Recovery/CreateNewPassword.module.css","i1-main/m1-ui/u4-components/co2-Error404/Error404.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.module.css","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.module.css","i1-main/m1-ui/u2-header/Header.module.css","i1-main/m1-ui/u1-common/c1-assets/images/girl-dancer.gif","i1-main/m1-ui/u4-components/co2-Error404/Error404.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox.tsx","i1-main/m3-dal/api.ts","i1-main/m2-bll/profile-reducer.ts","i1-main/m2-bll/auth-reducer.ts","i2-features/f1-Login/Login.tsx","i1-main/m2-bll/registration-reducer.ts","i2-features/f3-Registration/Registration.tsx","i1-main/m1-ui/u4-components/co1-Profile/Profile.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton.tsx","i1-main/m2-bll/Recovery-reducer.ts","i2-features/f2-Recovery/Recovery.tsx","i2-features/f2-Recovery/CreateNewPassword.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio.tsx","i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange.tsx","i2-features/f0-test/Test.tsx","i1-main/m1-ui/u3-routes/Routes.tsx","i1-main/m1-ui/u2-header/Header.tsx","i1-main/m1-ui/App.tsx","reportWebVitals.ts","i1-main/m2-bll/test-reducer.ts","i1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","error404","error404_text","girl","src","alt","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","instance","axios","create","baseURL","withCredentials","authAPI","data","post","RegistrationAPI","initialState","_id","email","name","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","profileChanged","login","password","isLoggedIn","emailChanged","passwordChanged","rememberMeChanged","onSubmit","onError","onErrorAC","onSubmitTC","dispatch","then","res","avatar","catch","err","response","message","Login","useDispatch","state","useSelector","to","PATH","PROFILE","loginForm","preventDefault","inputForm","placeholder","CHANGE_EMAIL","CHANGE_PASSWORD","IS_REGISTRATION","isRegistered","changeEmail","changePassword","createUserTC","dataRegistration","status","console","log","Registration","changeValueEvent","changeValue","LOGIN","registration","registrationInner","registrationItem","registrationButton","onClick","Profile","profile","SuperButton","red","finalClassName","default","isDone","info","successful","Recovery","recovery","useState","setEmail","title","event","from","button","CREATE_NEW_PASSWORD","CreateNewPassword","createNewPassword","input","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","SuperSelect","options","onChangeOption","mappedOptions","map","el","i","SuperRadio","onChangeCallback","o","SuperRange","onChangeRange","finalRangeClassName","range","Test","setChecked","setValue","arr","value1","value2","setValue2","test","superComponent","alert","undefined","newMinValue","REGISTRATION","RECOVERY","TEST","Routes","path","exact","render","Header","background","nav_links","nav_container","title_nav","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","testObj","firstCase","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca6f37d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__38XR1\",\"registrationInner\":\"Registration_registrationInner__2pTMs\",\"registrationItem\":\"Registration_registrationItem__1iT3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__2Q38G\",\"superComponent\":\"Test_superComponent__1Whms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3esZq\",\"loginForm\":\"Login_loginForm__3tV1n\",\"inputForm\":\"Login_inputForm__vIQy2\",\"message\":\"Login_message__FlCpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recovery\":\"Recovery_recovery__2Fm81\",\"title\":\"Recovery_title__2CVYg\",\"button\":\"Recovery_button__ytP9J\",\"message\":\"Recovery_message__2EyeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createNewPassword\":\"CreateNewPassword_createNewPassword__s2Y9P\",\"button\":\"CreateNewPassword_button__3jvFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__1ry36\",\"error404_text\":\"Error404_error404_text__2VILg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1LYW_\",\"errorInput\":\"SuperInputText_errorInput__271Mi\",\"error\":\"SuperInputText_error__2roUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2QTKu\",\"red\":\"SuperButton_red__2B-7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__RTEUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2ayCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Header_background__3d8e3\",\"nav_links\":\"Header_nav_links__2fY8Y\",\"nav_container\":\"Header_nav_container__20c2T\",\"title_nav\":\"Header_title_nav__3-n7c\"};","export default __webpack_public_path__ + \"static/media/girl-dancer.cfef6556.gif\";","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport girl from '../../u1-common/c1-assets/images/girl-dancer.gif'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error404}>\r\n            <div className={s.error404_text}>404\r\n            Page not found!</div><br/>\r\n            <div className={s.girl}><img src={girl} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                value={restProps.value}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // const isChecked = e.currentTarget.checked\r\n        onChangeChecked &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n        onChange &&\r\n        onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import axios from \"axios\";\r\nimport {AxiosResponseType, LoginType} from \"../m2-bll/auth-reducer\";\r\nimport { RequestRecoveryType } from \"../m2-bll/Recovery-reducer\";\r\n\r\n\r\n//'https://neko-back.herokuapp.com/2.0/'\r\n//\"http://localhost:7542/2.0/\"\r\n\r\n// 'nya-admin@nya.nya'\r\n// '1qazxcvBG'\r\nconst instance  = axios.create ({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\ntype RecoveryResponseType = {\r\n    info: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n}\r\nexport type RequestType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ResponseType = {\r\n    data: any\r\n    status: number\r\n    statusText: string\r\n    error?: string\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    recoverPassword(data: RequestRecoveryType) {\r\n        return  instance.post<RecoveryResponseType>('auth/forgot', data)\r\n    },\r\n    login(data: LoginType) {\r\n        return instance.post<AxiosResponseType>('auth/login', data)\r\n    },\r\n}\r\n\r\nexport const RegistrationAPI = {\r\n    signUp(data: RequestType) {\r\n        return instance.post<ResponseType>('auth/register', data)\r\n    },\r\n    ping() {\r\n        return instance.get('ping')\r\n    }\r\n}","import {AxiosResponseType} from \"./auth-reducer\";\r\n\r\nconst initialState: AxiosResponseType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    created: new Date(),\r\n    updated: new Date(),\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype PROFILE = ReturnType<typeof profileAC>\r\n\r\n\r\ntype ActionsType = PROFILE\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case profileChanged:\r\n            return {\r\n                ...state,\r\n                _id: action._id,\r\n                email: action.email,\r\n                name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount,\r\n                created: action.created,\r\n                updated: action.updated,\r\n                isAdmin: action.isAdmin,\r\n                verified: action.verified,\r\n                rememberMe: action.rememberMe,\r\n                avatar: action.avatar,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// const firstCase = ''\r\nconst profileChanged = 'profileChanged'\r\n\r\n\r\n\r\nexport const profileAC = (\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    publicCardPacksCount: number, // количество колод\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean, // подтвердил ли почту\r\n    rememberMe: boolean,\r\n    avatar?: string,\r\n    error?: string,\r\n) => ({type: profileChanged, _id, email, name, avatar, publicCardPacksCount, created,\r\n    updated, isAdmin, verified, rememberMe, error} as const)\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {profileAC} from \"./profile-reducer\";\r\n\r\ntype EMAIL_CHANGED = ReturnType<typeof emailChangedAC>\r\ntype PASSWORD_CHANGED = ReturnType<typeof passwordChangedAC>\r\ntype ON_SUBMIT = ReturnType<typeof onSubmitAC>\r\ntype REMEMBER_ME = ReturnType<typeof rememberMeChangedAC>\r\nexport type ON_ERROR = ReturnType<typeof onErrorAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\n\r\nexport type LoginType = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nexport type AxiosResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nconst initialState = {\r\n    login: 'nya-admin@nya.nya',\r\n    password: '1qazxcvBG',\r\n    rememberMe: false,\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\n\r\ntype ActionsType = EMAIL_CHANGED | PASSWORD_CHANGED | ON_SUBMIT | REMEMBER_ME | ON_ERROR\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case emailChanged:\r\n            return {...state, login: action.value}\r\n        case passwordChanged:\r\n            return {...state, password: action.value}\r\n        case rememberMeChanged:\r\n            return {...state, rememberMe: action.value}\r\n        case onSubmit:\r\n            return {...state, isLoggedIn: true}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst emailChanged = 'emailChanged'\r\nconst passwordChanged = 'passwordChanged'\r\nconst rememberMeChanged = 'rememberMeChanged'\r\nconst onSubmit = 'onSubmit'\r\nexport const onError = 'onError'\r\n\r\nexport const emailChangedAC = (value: string) => ({type: emailChanged, value} as const)\r\nexport const passwordChangedAC = (value: string) => ({type: passwordChanged, value} as const)\r\nexport const rememberMeChangedAC = (value: boolean) => ({type: rememberMeChanged, value} as const)\r\nexport const onSubmitAC = () => ({type: onSubmit} as const)\r\nexport const onErrorAC = (error: string) => ({type: onError, error} as const)\r\n\r\n\r\n\r\nexport const onSubmitTC = (data: LoginType) => (dispatch: Dispatch) => {\r\n    authAPI.login(data)\r\n\r\n        .then((res: AxiosResponse<AxiosResponseType>) => {\r\n            // console.log('you have logged in')\r\n            dispatch(onSubmitAC())\r\n            dispatch(profileAC(res.data._id, res.data.email, res.data.name, res.data.publicCardPacksCount, res.data.created,\r\n                res.data.updated, res.data.isAdmin, res.data.verified, res.data.rememberMe, res.data.avatar, res.data.error))\r\n        })\r\n\r\n        .catch((err) => {\r\n            // console.log('you have not logged in')\r\n            const error = err.response\r\n            ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n\r\n\r\n","import React, {ChangeEvent, FC, FormEvent, useState} from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {emailChangedAC, InitialStateType, onSubmitTC, passwordChangedAC, rememberMeChangedAC} from \"../../i1-main/m2-bll/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\ntype PropsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    isLoggedIn?: boolean\r\n    onLoginChange: (value: string) => void\r\n    onPasswordChange: (value: string) => void\r\n    onRememberMeChange: (value: boolean) => void\r\n}\r\n\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppRootStateType, InitialStateType>(s => s.isLoggedIn)\r\n\r\n\r\n    const loginChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(emailChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const PasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(passwordChangedAC(e.currentTarget.value))\r\n    }\r\n\r\n    const RememberMeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(rememberMeChangedAC(e.currentTarget.checked))\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(onSubmitTC({email: state.login, password: state.password, rememberMe: state.rememberMe}))\r\n    }\r\n\r\n\r\n    if (state.isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n\r\n            <form className={s.loginForm} onSubmit={handleSubmit}>\r\n                <label>\r\n                    <SuperInputText className={s.inputForm} onChange={loginChange} placeholder={'email'}\r\n                                    type={'email'} value={state.login} name={'login'}/>\r\n                </label>\r\n                <label>\r\n                    <SuperInputText className={s.inputForm} onChange={PasswordChange} placeholder={'password'}\r\n                                    type={'password'} value={state.password} name={'login'}/>\r\n                </label>\r\n                <label>\r\n                    <SuperCheckbox checked={state.rememberMe} onChange={RememberMeChange} name={'rememberMe'}>Remember me</SuperCheckbox>\r\n                </label>\r\n                <label>\r\n                    <SuperInputText type={'submit'} value={'Login'}/>\r\n                </label>\r\n                {state.error === ''\r\n                    ? <div className={s.message}>enter you email and password</div>\r\n                    : <div className={s.message}>{state.error}</div>\r\n                }\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RegistrationAPI, RequestType} from \"../m3-dal/api\";\r\nimport {onError, onErrorAC} from \"./auth-reducer\";\r\nimport {ON_ERROR} from './auth-reducer'\r\n\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL',\r\n    CHANGE_PASSWORD = 'CHANGE_PASSWORD',\r\n    IS_REGISTRATION = 'IS_REGISTRATION'\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\nexport type InitialStateRegistrationType = typeof initialState\r\n\r\ntype ChangeEmailAT = ReturnType<typeof changeEmail>\r\ntype ChangePasswordAT = ReturnType<typeof changePassword>\r\ntype CheckRegistrationAT = ReturnType<typeof checkRegistration>\r\n\r\n\r\ntype ActionType =\r\n    | ChangeEmailAT\r\n    | ChangePasswordAT\r\n    | CheckRegistrationAT\r\n    | ON_ERROR\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateRegistrationType = initialState, action: ActionType): InitialStateRegistrationType => {\r\n    switch (action.type) {\r\n        case CHANGE_EMAIL:\r\n            return {...state, email: action.value}\r\n        case CHANGE_PASSWORD:\r\n            return {...state, password: action.value}\r\n        case IS_REGISTRATION:\r\n            return {...state, isRegistered: action.isRegistered}\r\n        case onError:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeEmail = (value: string) => {\r\n    return {\r\n        type: CHANGE_EMAIL,\r\n        value\r\n    } as const\r\n}\r\nexport const changePassword = (value: string) => {\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        value\r\n    } as const\r\n}\r\n\r\nconst checkRegistration = (isRegistered: boolean) => {\r\n    return {\r\n        type: IS_REGISTRATION,\r\n        isRegistered\r\n    } as const\r\n}\r\n\r\n\r\nexport const createUserTC = (dataRegistration: RequestType) => (dispatch: Dispatch) => {\r\n    RegistrationAPI.signUp({email: dataRegistration.email, password: dataRegistration.password})\r\n        .then((res) => {\r\n            if (res.status === 201) {\r\n                dispatch(checkRegistration(true))\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n        })\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./Registration.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {changeEmail, changePassword, createUserTC, InitialStateRegistrationType} from \"../../i1-main/m2-bll/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\nexport const Registration = () => {\r\n    const state = useSelector<AppRootStateType, InitialStateRegistrationType>(state=>state.isRegistered)\r\n    // const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const  dispatch = useDispatch()\r\n\r\n    const changeValueEvent = (e:React.ChangeEvent<HTMLInputElement>,changeValue:Function) => {\r\n        dispatch(changeValue( e.currentTarget.value))\r\n    }\r\n    const requestData =() => {\r\n        dispatch(createUserTC({email: state.email, password: state.password}))\r\n    }\r\n\r\n    if (state.isRegistered) {\r\n       return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.registration}>\r\n            <div className={s.registrationInner}>\r\n                <div className={`${s.registrationItem} ${s.email}`}>\r\n                    <input type='text' placeholder='Email' value={state.email} onChange={(e)=>changeValueEvent(e, changeEmail)}/>\r\n                </div>\r\n                <div className={`${s.registrationItem} ${s.password}`}>\r\n                    <input type='password' placeholder='Password' value={state.password} onChange={(e)=>changeValueEvent(e, changePassword)}/>\r\n                </div>\r\n                <div className={s.registrationButton} >\r\n                    <button onClick={requestData}>Send</button>\r\n                </div>\r\n            </div>\r\n            {state.error === ''\r\n                ? <div className={s.message}>enter you email and password</div>\r\n                : <div className={s.message}>{state.error}</div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../u3-routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n\r\n    const name = useSelector<AppRootStateType, string>(s => s.profile.name)\r\n    const avatar = useSelector<AppRootStateType, string | undefined>(s => s.profile.avatar)\r\n    const publicCardPacksCount = useSelector<AppRootStateType, number>(s => s.profile.publicCardPacksCount)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(s => s.isLoggedIn.isLoggedIn)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <div>{`your name is ${name}`}</div>\r\n            {avatar ?<div>{`you face looks like this: ${avatar}`}</div> : null}\r\n            <div>{`there is ${publicCardPacksCount} cards available`}</div>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../m3-dal/api\";\r\nimport {onErrorAC} from \"./auth-reducer\";\r\n\r\n\r\ntype ActionType = SuccessfulActionType\r\n    | ResponseInfoActionType\r\n\r\nconst initialState = {\r\n    isDone: null,\r\n    info: \"\"\r\n}\r\nexport type RequestRecoveryType = {\r\n    email: string,\r\n    from?: string,\r\n    message?: string\r\n}\r\n\r\nexport const recoveryReducer = (state: RecoveryStateType = initialState, action: ActionType): RecoveryStateType => {\r\n    switch (action.type) {\r\n        case \"SUCCESSFUL\":\r\n            return <RecoveryStateType>{...state, isDone: action.value}\r\n        case \"RESPONSE_INFO\":\r\n            return {...state, info: action.info}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const successful = (value: boolean | null) => ({type: \"SUCCESSFUL\", value} as const )\r\nexport const responseInfo = (info: string) => ({type: \"RESPONSE_INFO\", info} as const)\r\n\r\nexport const recoveryPassword = (data: RequestRecoveryType) => (dispatch: Dispatch) => {\r\n    authAPI.recoverPassword(data)\r\n        .then(res => {\r\n            console.log('.then')\r\n            dispatch(successful(true))\r\n            dispatch(responseInfo(res.data.info))\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log('.catch')\r\n            dispatch(successful(false))\r\n            const error = err.response\r\n                ? err.response.data.error : (err.message + ', more details in the console');\r\n            dispatch(onErrorAC(error))\r\n\r\n        })\r\n}\r\n\r\ntype RecoveryStateType = typeof initialState\r\ntype SuccessfulActionType = ReturnType<typeof successful>\r\ntype ResponseInfoActionType = ReturnType<typeof responseInfo>","import React, {useState} from \"react\";\r\nimport s from \"./Recovery.module.css\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport { ChangeEvent } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoveryPassword, successful} from \"../../i1-main/m2-bll/Recovery-reducer\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../i1-main/m1-ui/u3-routes/Routes\";\r\n\r\nexport const Recovery = () => {\r\n\r\n    const isDone = useSelector<AppRootStateType, boolean | null>( state => state.recovery.isDone)\r\n    const error = useSelector<AppRootStateType, string>(state=>state.isLoggedIn.error)\r\n    const dispatch  = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"test@email.nya\")\r\n    const from = \"ai73a@yandex.by\"\r\n    const message = ''\r\n\r\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(successful(null))\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(recoveryPassword({email, from, message}))\r\n    }\r\n\r\n    return (\r\n        <div className={s.recovery}>\r\n            <span className={s.title}>Forgot password ?</span>\r\n            <SuperInputText onChange={changeHandler} placeholder={\"Enter you Email\"} value={email}/>\r\n            <SuperButton onClick={sendEmail} className={s.button}>Recover password</SuperButton>\r\n            {isDone === null \r\n                ? <div className={s.message}>enter you email</div> \r\n                : isDone\r\n                    ? <Redirect to={PATH.CREATE_NEW_PASSWORD}  />\r\n                    : <div className={s.message}>email incorrect {error}</div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./CreateNewPassword.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {successful} from \"../../i1-main/m2-bll/Recovery-reducer\";\r\nimport {AppRootStateType} from \"../../i1-main/m2-bll/store\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\n\r\n\r\nexport const CreateNewPassword = () => {\r\n    //декоративная информация для показа что все ок\r\n    const info = useSelector<AppRootStateType, string>( state => state.recovery.info)\r\n    const dispatch = useDispatch()\r\n    //зануление свойство isDone для поподания обратно на страницу восстановления пароля\r\n    dispatch(successful(null))\r\n\r\n    return (\r\n        <div className={s.createNewPassword}>\r\n            <h4 className={s.title}>change password</h4>\r\n            <SuperInputText className={s.input}/>\r\n            <SuperButton className={s.button}>confirm</SuperButton>\r\n            {info && <div className={s.message}>{info}</div>}\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../rc1-SuperInputText/SuperInputText\";\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(true); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.superSpan} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options?.map((el, i) => (\r\n        <option key={i}>\r\n            {el}\r\n        </option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={restProps.checked}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Test.module.css\";\r\nimport SuperButton from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan\r\n    from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../i1-main/m1-ui/u4-components/SuperComponents/rc7-SuperRange/SuperRange\";\r\n\r\nexport const Test = () => {\r\n    const [checked, setChecked] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n    const arr = [\"Oxy\", \"Script\", \"Babushka\"];\r\n    const [value1, onChangeOption] = useState(arr[1]);\r\n    const [value2, setValue2] = useState(0);\r\n\r\n    const setMinValue = (newMinValue: number): void => {\r\n        setValue2(newMinValue)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.test}>\r\n            My SuperButtons are here\r\n            <div className={s.superComponent}>\r\n                1) <SuperButton red onClick={ () => alert('Good Job')}>Click on me</SuperButton>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                2) <SuperInputText/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                3) <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                4) <SuperEditableSpan value={value} onChangeText={setValue}\r\n                                      spanProps={{children: value ? undefined : \"you can edit me\"}}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                5) <SuperSelect options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                6) <SuperRadio name={\"radio\"} options={arr} value={value1} onChangeOption={onChangeOption}/>\r\n            </div>\r\n            <div className={s.superComponent}>\r\n                7) <span>{value2}</span>\r\n                <SuperRange name={\"radio\"} value={value2} onChangeRange={setMinValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../u4-components/co2-Error404/Error404\";\r\nimport {Login} from \"../../../i2-features/f1-Login/Login\";\r\nimport {Registration} from \"../../../i2-features/f3-Registration/Registration\";\r\nimport {Profile} from \"../u4-components/co1-Profile/Profile\";\r\nimport {Recovery} from \"../../../i2-features/f2-Recovery/Recovery\";\r\nimport {CreateNewPassword} from \"../../../i2-features/f2-Recovery/CreateNewPassword\";\r\nimport {Test} from \"../../../i2-features/f0-test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY: '/recovery',\r\n    CREATE_NEW_PASSWORD: '/create_new_password',\r\n    TEST: '/super_inputs'\r\n\r\n\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                {/*<Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY} render={() => <Recovery/>}/>\r\n                <Route path={PATH.CREATE_NEW_PASSWORD} render={() => <CreateNewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n\r\n                <Route path={'/404'} render={() => <Error404/>}/>\r\n\r\n                {/*// add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Redirect from={'*'} to={'/404'}/>\r\n\r\n                {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../u3-routes/Routes\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.nav_links}>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active}\r\n                             to={PATH.REGISTRATION}>Registration</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.PROFILE}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.RECOVERY}>Forgot\r\n                        Password?</NavLink>\r\n                </div>\r\n                <div className={s.nav_container}>\r\n                    <NavLink className={s.title_nav} activeClassName={s.active} to={PATH.CREATE_NEW_PASSWORD}>Change\r\n                        Password</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./u2-header/Header\";\nimport Routes from \"./u3-routes/Routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter >\n        <Header/>\n        <Routes/>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {}\r\n\r\nconst initialState: InitialStateType = {\r\n    testObj: {}\r\n}\r\n\r\nexport const testReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case firstCase:\r\n            return {...state}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\nconst firstCase = ''","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {testReducer} from \"./test-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport { recoveryReducer } from './Recovery-reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    test: testReducer,\r\n    isLoggedIn: authReducer,\r\n    profile: profileReducer,\r\n    isRegistered: registrationReducer,\r\n    recovery: recoveryReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './i1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './i1-main/m2-bll/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}